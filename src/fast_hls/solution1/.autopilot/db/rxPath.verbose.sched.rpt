

================================================================
== Vitis HLS Report for 'rxPath'
================================================================
* Date:           Thu May 29 06:17:17 2025

* Version:        2024.2 (Build 5238294 on Nov  8 2024)
* Project:        fast_hls
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+-----------+------------+
    |  Clock |  Target  | Estimated | Uncertainty|
    +--------+----------+-----------+------------+
    |ap_clk  |  25.00 ns|  15.098 ns|     6.75 ns|
    +--------+----------+-----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+----------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline |
    |   min   |   max   |    min   |    max   | min | max |   Type   |
    +---------+---------+----------+----------+-----+-----+----------+
    |        4|        4|  0.100 us|  0.100 us|    3|    3|  yes(flp)|
    +---------+---------+----------+----------+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 1
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 3, depth = 5


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 3, D = 5, States = { 1 2 3 4 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 15.0>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %order_to_book, void @empty, i32 1, i32 1, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0, i32 0"   --->   Operation 6 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %time_to_book, void @empty, i32 1, i32 1, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0, i32 0"   --->   Operation 7 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i128 %metadata_to_book, void @empty, i32 1, i32 1, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0, i32 0"   --->   Operation 8 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %tagsIn, void @empty, i32 1, i32 1, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0, i32 0"   --->   Operation 9 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %lbPortOpenReplyIn, void @empty, i32 1, i32 1, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0, i32 0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %lbRequestPortOpenOut, void @empty, i32 1, i32 1, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0, i32 0"   --->   Operation 11 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i96 %lbRxMetadataIn, void @empty, i32 1, i32 1, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0, i32 0"   --->   Operation 12 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i128 %lbRxDataIn, void @empty, i32 1, i32 1, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0, i32 0"   --->   Operation 13 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specpipeline_ln38 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_1" [fast_src/fast_protocol.cpp:38]   --->   Operation 14 'specpipeline' 'specpipeline_ln38' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%next_state_1_load = load i3 %next_state_1" [fast_src/fast_protocol.cpp:56]   --->   Operation 15 'load' 'next_state_1_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%first_packet_load = load i64 %first_packet" [fast_src/fast_protocol.cpp:56]   --->   Operation 16 'load' 'first_packet_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%second_packet_load = load i43 %second_packet" [fast_src/fast_protocol.cpp:56]   --->   Operation 17 'load' 'second_packet_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (1.65ns)   --->   "%switch_ln56 = switch i3 %next_state_1_load, void %sw.bb, i3 4, void %sw.bb271, i3 1, void %sw.bb14, i3 2, void %sw.bb19, i3 5, void %sw.bb38_ifconv, i3 3, void %sw.bb138, i3 6, void %sw.bb148_ifconv" [fast_src/fast_protocol.cpp:56]   --->   Operation 18 'switch' 'switch_ln56' <Predicate = true> <Delay = 1.65>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%encoded_message_20 = trunc i43 %second_packet_load" [fast_src/fast_protocol.cpp:245]   --->   Operation 19 'trunc' 'encoded_message_20' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%trunc_ln245_1 = trunc i43 %second_packet_load" [fast_src/fast_protocol.cpp:245]   --->   Operation 20 'trunc' 'trunc_ln245_1' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%trunc_ln245_2 = trunc i43 %second_packet_load" [fast_src/fast_protocol.cpp:245]   --->   Operation 21 'trunc' 'trunc_ln245_2' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%encoded_message_21 = partselect i8 @_ssdm_op_PartSelect.i8.i43.i32.i32, i43 %second_packet_load, i32 8, i32 15" [fast_src/fast_protocol.cpp:245]   --->   Operation 22 'partselect' 'encoded_message_21' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%trunc_ln7 = partselect i3 @_ssdm_op_PartSelect.i3.i43.i32.i32, i43 %second_packet_load, i32 8, i32 10" [fast_src/fast_protocol.cpp:244]   --->   Operation 23 'partselect' 'trunc_ln7' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%trunc_ln244_1 = partselect i7 @_ssdm_op_PartSelect.i7.i43.i32.i32, i43 %second_packet_load, i32 8, i32 14" [fast_src/fast_protocol.cpp:244]   --->   Operation 24 'partselect' 'trunc_ln244_1' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%encoded_message_11 = partselect i8 @_ssdm_op_PartSelect.i8.i43.i32.i32, i43 %second_packet_load, i32 16, i32 23" [fast_src/fast_protocol.cpp:245]   --->   Operation 25 'partselect' 'encoded_message_11' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%trunc_ln244_2 = partselect i3 @_ssdm_op_PartSelect.i3.i43.i32.i32, i43 %second_packet_load, i32 16, i32 18" [fast_src/fast_protocol.cpp:244]   --->   Operation 26 'partselect' 'trunc_ln244_2' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%trunc_ln244_3 = partselect i7 @_ssdm_op_PartSelect.i7.i43.i32.i32, i43 %second_packet_load, i32 16, i32 22" [fast_src/fast_protocol.cpp:244]   --->   Operation 27 'partselect' 'trunc_ln244_3' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%encoded_message_12 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %first_packet_load, i32 24, i32 31" [fast_src/fast_protocol.cpp:244]   --->   Operation 28 'partselect' 'encoded_message_12' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%trunc_ln245_5 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %first_packet_load, i32 24, i32 30" [fast_src/fast_protocol.cpp:245]   --->   Operation 29 'partselect' 'trunc_ln245_5' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%encoded_message_13 = partselect i8 @_ssdm_op_PartSelect.i8.i43.i32.i32, i43 %second_packet_load, i32 24, i32 31" [fast_src/fast_protocol.cpp:245]   --->   Operation 30 'partselect' 'encoded_message_13' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%trunc_ln244_5 = partselect i3 @_ssdm_op_PartSelect.i3.i43.i32.i32, i43 %second_packet_load, i32 24, i32 26" [fast_src/fast_protocol.cpp:244]   --->   Operation 31 'partselect' 'trunc_ln244_5' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%trunc_ln244_6 = partselect i7 @_ssdm_op_PartSelect.i7.i43.i32.i32, i43 %second_packet_load, i32 24, i32 30" [fast_src/fast_protocol.cpp:244]   --->   Operation 32 'partselect' 'trunc_ln244_6' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%encoded_message_14 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %first_packet_load, i32 32, i32 39" [fast_src/fast_protocol.cpp:244]   --->   Operation 33 'partselect' 'encoded_message_14' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%trunc_ln245_7 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %first_packet_load, i32 32, i32 38" [fast_src/fast_protocol.cpp:245]   --->   Operation 34 'partselect' 'trunc_ln245_7' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%encoded_message_15 = partselect i7 @_ssdm_op_PartSelect.i7.i43.i32.i32, i43 %second_packet_load, i32 32, i32 38" [fast_src/fast_protocol.cpp:245]   --->   Operation 35 'partselect' 'encoded_message_15' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%trunc_ln244_8 = partselect i3 @_ssdm_op_PartSelect.i3.i43.i32.i32, i43 %second_packet_load, i32 32, i32 34" [fast_src/fast_protocol.cpp:244]   --->   Operation 36 'partselect' 'trunc_ln244_8' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%encoded_message_16 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %first_packet_load, i32 40, i32 47" [fast_src/fast_protocol.cpp:244]   --->   Operation 37 'partselect' 'encoded_message_16' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%trunc_ln245_9 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %first_packet_load, i32 40, i32 46" [fast_src/fast_protocol.cpp:245]   --->   Operation 38 'partselect' 'trunc_ln245_9' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%encoded_message_17 = partselect i3 @_ssdm_op_PartSelect.i3.i43.i32.i32, i43 %second_packet_load, i32 40, i32 42" [fast_src/fast_protocol.cpp:245]   --->   Operation 39 'partselect' 'encoded_message_17' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%encoded_message_18 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %first_packet_load, i32 48, i32 55" [fast_src/fast_protocol.cpp:244]   --->   Operation 40 'partselect' 'encoded_message_18' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%trunc_ln244_s = partselect i3 @_ssdm_op_PartSelect.i3.i64.i32.i32, i64 %first_packet_load, i32 48, i32 50" [fast_src/fast_protocol.cpp:244]   --->   Operation 41 'partselect' 'trunc_ln244_s' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%trunc_ln244_4 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %first_packet_load, i32 48, i32 54" [fast_src/fast_protocol.cpp:244]   --->   Operation 42 'partselect' 'trunc_ln244_4' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%encoded_message_19 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %first_packet_load, i32 56, i32 63" [fast_src/fast_protocol.cpp:244]   --->   Operation 43 'partselect' 'encoded_message_19' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%trunc_ln8 = partselect i3 @_ssdm_op_PartSelect.i3.i64.i32.i32, i64 %first_packet_load, i32 56, i32 58" [fast_src/fast_protocol.cpp:260]   --->   Operation 44 'partselect' 'trunc_ln8' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%trunc_ln260_1 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %first_packet_load, i32 56, i32 62" [fast_src/fast_protocol.cpp:260]   --->   Operation 45 'partselect' 'trunc_ln260_1' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%decoded_exponent_1 = partselect i2 @_ssdm_op_PartSelect.i2.i64.i32.i32, i64 %first_packet_load, i32 16, i32 17" [fast_src/fast_protocol.cpp:260]   --->   Operation 46 'partselect' 'decoded_exponent_1' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%tmp_47 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %first_packet_load, i32 31" [fast_src/fast_protocol.cpp:266]   --->   Operation 47 'bitselect' 'tmp_47' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.99ns)   --->   "%decoded_mantissa_2 = select i1 %tmp_47, i7 0, i7 %trunc_ln245_5" [fast_src/fast_protocol.cpp:266]   --->   Operation 48 'select' 'decoded_mantissa_2' <Predicate = (next_state_1_load == 6)> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node empty_31)   --->   "%zext_ln266 = zext i7 %decoded_mantissa_2" [fast_src/fast_protocol.cpp:266]   --->   Operation 49 'zext' 'zext_ln266' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node message_offset_10)   --->   "%message_offset_14 = select i1 %tmp_47, i3 3, i3 4" [fast_src/fast_protocol.cpp:266]   --->   Operation 50 'select' 'message_offset_14' <Predicate = (next_state_1_load == 6)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 51 [1/1] (1.24ns)   --->   "%select_ln272 = select i1 %tmp_47, i8 %encoded_message_12, i8 %encoded_message_14" [fast_src/fast_protocol.cpp:272]   --->   Operation 51 'select' 'select_ln272' <Predicate = (next_state_1_load == 6)> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%tmp_48 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %select_ln272, i32 7" [fast_src/fast_protocol.cpp:272]   --->   Operation 52 'bitselect' 'tmp_48' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node message_offset_10)   --->   "%message_offset_15 = select i1 %tmp_47, i3 4, i3 5" [fast_src/fast_protocol.cpp:275]   --->   Operation 53 'select' 'message_offset_15' <Predicate = (next_state_1_load == 6)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node empty_31)   --->   "%trunc_ln275 = trunc i7 %decoded_mantissa_2" [fast_src/fast_protocol.cpp:275]   --->   Operation 54 'trunc' 'trunc_ln275' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node empty_31)   --->   "%shl_ln2 = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i1.i7, i1 %trunc_ln275, i7 0" [fast_src/fast_protocol.cpp:275]   --->   Operation 55 'bitconcatenate' 'shl_ln2' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node empty_31)   --->   "%or_ln275 = or i8 %shl_ln2, i8 %select_ln272" [fast_src/fast_protocol.cpp:275]   --->   Operation 56 'or' 'or_ln275' <Predicate = (next_state_1_load == 6)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node empty_31)   --->   "%tmp_49 = bitselect i1 @_ssdm_op_BitSelect.i1.i7.i32, i7 %decoded_mantissa_2, i32 1" [fast_src/fast_protocol.cpp:275]   --->   Operation 57 'bitselect' 'tmp_49' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node empty_31)   --->   "%decoded_mantissa_3 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i1.i8, i1 %tmp_49, i8 %or_ln275" [fast_src/fast_protocol.cpp:275]   --->   Operation 58 'bitconcatenate' 'decoded_mantissa_3' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.98ns) (out node of the LUT)   --->   "%message_offset_10 = select i1 %tmp_48, i3 %message_offset_14, i3 %message_offset_15" [fast_src/fast_protocol.cpp:272]   --->   Operation 59 'select' 'message_offset_10' <Predicate = (next_state_1_load == 6)> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 60 [1/1] (1.70ns)   --->   "%tmp_22 = sparsemux i7 @_ssdm_op_SparseMux.ap_auto.3i7.i7.i3, i3 3, i7 %trunc_ln245_5, i3 4, i7 %trunc_ln245_7, i3 5, i7 %trunc_ln245_9, i7 0, i3 %message_offset_10" [fast_src/fast_protocol.cpp:280]   --->   Operation 60 'sparsemux' 'tmp_22' <Predicate = (next_state_1_load == 6)> <Delay = 1.70> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 137 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 1.70> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 61 [1/1] (0.99ns) (out node of the LUT)   --->   "%empty_31 = select i1 %tmp_48, i9 %zext_ln266, i9 %decoded_mantissa_3" [fast_src/fast_protocol.cpp:272]   --->   Operation 61 'select' 'empty_31' <Predicate = (next_state_1_load == 6)> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 62 [1/1] (1.70ns)   --->   "%tmp_24 = sparsemux i8 @_ssdm_op_SparseMux.ap_auto.3i8.i8.i3, i3 3, i8 %encoded_message_14, i3 4, i8 %encoded_message_16, i3 5, i8 %encoded_message_18, i8 0, i3 %message_offset_10" [fast_src/fast_protocol.cpp:295]   --->   Operation 62 'sparsemux' 'tmp_24' <Predicate = (next_state_1_load == 6)> <Delay = 1.70> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 137 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 1.70> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node size_buff_2)   --->   "%trunc_ln295 = trunc i8 %tmp_24" [fast_src/fast_protocol.cpp:295]   --->   Operation 63 'trunc' 'trunc_ln295' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_50 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %tmp_24, i32 7" [fast_src/fast_protocol.cpp:295]   --->   Operation 64 'bitselect' 'tmp_50' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node size_buff_2)   --->   "%xor_ln295 = xor i1 %tmp_50, i1 1" [fast_src/fast_protocol.cpp:295]   --->   Operation 65 'xor' 'xor_ln295' <Predicate = (next_state_1_load == 6)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 66 [1/1] (0.97ns) (out node of the LUT)   --->   "%size_buff_2 = and i1 %trunc_ln295, i1 %xor_ln295" [fast_src/fast_protocol.cpp:295]   --->   Operation 66 'and' 'size_buff_2' <Predicate = (next_state_1_load == 6)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node message_offset_16)   --->   "%select_ln295 = select i1 %tmp_50, i3 1, i3 2" [fast_src/fast_protocol.cpp:295]   --->   Operation 67 'select' 'select_ln295' <Predicate = (next_state_1_load == 6)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 68 [1/1] (1.65ns) (out node of the LUT)   --->   "%message_offset_16 = add i3 %select_ln295, i3 %message_offset_10" [fast_src/fast_protocol.cpp:295]   --->   Operation 68 'add' 'message_offset_16' <Predicate = (next_state_1_load == 6)> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%zext_ln249 = zext i3 %message_offset_16" [fast_src/fast_protocol.cpp:249]   --->   Operation 69 'zext' 'zext_ln249' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (1.65ns)   --->   "%message_offset_17 = add i4 %zext_ln249, i4 1" [fast_src/fast_protocol.cpp:303]   --->   Operation 70 'add' 'message_offset_17' <Predicate = (next_state_1_load == 6)> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 71 [1/1] (1.82ns)   --->   "%tmp_25 = sparsemux i7 @_ssdm_op_SparseMux.ap_auto.4i7.i7.i3, i3 4, i7 %trunc_ln245_7, i3 5, i7 %trunc_ln245_9, i3 6, i7 %trunc_ln244_4, i3 7, i7 %trunc_ln260_1, i7 0, i3 %message_offset_16" [fast_src/fast_protocol.cpp:303]   --->   Operation 71 'sparsemux' 'tmp_25' <Predicate = (next_state_1_load == 6)> <Delay = 1.82> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 137 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%size_buff_3 = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i1.i7, i1 %size_buff_2, i7 %tmp_25" [fast_src/fast_protocol.cpp:303]   --->   Operation 72 'bitconcatenate' 'size_buff_3' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (1.82ns)   --->   "%orderID_buff_1 = sparsemux i8 @_ssdm_op_SparseMux.ap_auto.4i8.i8.i3, i3 4, i8 %encoded_message_16, i3 5, i8 %encoded_message_18, i3 6, i8 %encoded_message_19, i3 7, i8 %encoded_message_20, i8 0, i3 %message_offset_16" [fast_src/fast_protocol.cpp:312]   --->   Operation 73 'sparsemux' 'orderID_buff_1' <Predicate = (next_state_1_load == 6)> <Delay = 1.82> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 137 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_51 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %orderID_buff_1, i32 7" [fast_src/fast_protocol.cpp:312]   --->   Operation 74 'bitselect' 'tmp_51' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (1.65ns)   --->   "%message_offset_18 = add i4 %zext_ln249, i4 2" [fast_src/fast_protocol.cpp:317]   --->   Operation 75 'add' 'message_offset_18' <Predicate = (next_state_1_load == 6)> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 76 [1/1] (0.00ns)   --->   "%zext_ln250 = zext i8 %orderID_buff_1" [fast_src/fast_protocol.cpp:250]   --->   Operation 76 'zext' 'zext_ln250' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 77 [1/1] (1.82ns)   --->   "%tmp_29 = sparsemux i8 @_ssdm_op_SparseMux.ap_auto.4i8.i8.i3, i3 4, i8 %encoded_message_18, i3 5, i8 %encoded_message_19, i3 6, i8 %encoded_message_20, i3 7, i8 %encoded_message_21, i8 0, i3 %message_offset_16" [fast_src/fast_protocol.cpp:312]   --->   Operation 77 'sparsemux' 'tmp_29' <Predicate = (next_state_1_load == 6)> <Delay = 1.82> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 137 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node and_ln312)   --->   "%tmp_52 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %tmp_29, i32 7" [fast_src/fast_protocol.cpp:312]   --->   Operation 78 'bitselect' 'tmp_52' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node or_ln317)   --->   "%shl_ln317 = shl i8 %orderID_buff_1, i8 7" [fast_src/fast_protocol.cpp:317]   --->   Operation 79 'shl' 'shl_ln317' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (1.65ns)   --->   "%message_offset_19 = add i4 %zext_ln249, i4 3" [fast_src/fast_protocol.cpp:317]   --->   Operation 80 'add' 'message_offset_19' <Predicate = (next_state_1_load == 6)> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 81 [1/1] (0.99ns) (out node of the LUT)   --->   "%or_ln317 = or i8 %shl_ln317, i8 %tmp_29" [fast_src/fast_protocol.cpp:317]   --->   Operation 81 'or' 'or_ln317' <Predicate = (next_state_1_load == 6)> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%tmp_32 = partselect i7 @_ssdm_op_PartSelect.i7.i8.i32.i32, i8 %orderID_buff_1, i32 1, i32 7" [fast_src/fast_protocol.cpp:317]   --->   Operation 82 'partselect' 'tmp_32' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "%trunc_ln3 = partselect i3 @_ssdm_op_PartSelect.i3.i8.i32.i32, i8 %orderID_buff_1, i32 1, i32 3" [fast_src/fast_protocol.cpp:317]   --->   Operation 83 'partselect' 'trunc_ln3' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 84 [1/1] (0.00ns)   --->   "%orderID_buff_3 = bitconcatenate i15 @_ssdm_op_BitConcatenate.i15.i7.i8, i7 %tmp_32, i8 %or_ln317" [fast_src/fast_protocol.cpp:317]   --->   Operation 84 'bitconcatenate' 'orderID_buff_3' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 85 [1/1] (0.00ns)   --->   "%zext_ln250_1 = zext i15 %orderID_buff_3" [fast_src/fast_protocol.cpp:250]   --->   Operation 85 'zext' 'zext_ln250_1' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 86 [1/1] (1.82ns)   --->   "%tmp_34 = sparsemux i8 @_ssdm_op_SparseMux.ap_auto.4i8.i8.i3, i3 4, i8 %encoded_message_19, i3 5, i8 %encoded_message_20, i3 6, i8 %encoded_message_21, i3 7, i8 %encoded_message_11, i8 0, i3 %message_offset_16" [fast_src/fast_protocol.cpp:312]   --->   Operation 86 'sparsemux' 'tmp_34' <Predicate = (next_state_1_load == 6)> <Delay = 1.82> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 137 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%tmp_53 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %tmp_34, i32 7" [fast_src/fast_protocol.cpp:312]   --->   Operation 87 'bitselect' 'tmp_53' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (1.73ns)   --->   "%message_offset_20 = add i4 %zext_ln249, i4 4" [fast_src/fast_protocol.cpp:317]   --->   Operation 88 'add' 'message_offset_20' <Predicate = (next_state_1_load == 6)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node or_ln317_1)   --->   "%shl_ln317_1 = shl i8 %tmp_29, i8 7" [fast_src/fast_protocol.cpp:317]   --->   Operation 89 'shl' 'shl_ln317_1' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 90 [1/1] (0.99ns) (out node of the LUT)   --->   "%or_ln317_1 = or i8 %shl_ln317_1, i8 %tmp_34" [fast_src/fast_protocol.cpp:317]   --->   Operation 90 'or' 'or_ln317_1' <Predicate = (next_state_1_load == 6)> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 91 [1/1] (0.00ns)   --->   "%tmp_35 = partselect i7 @_ssdm_op_PartSelect.i7.i8.i32.i32, i8 %or_ln317, i32 1, i32 7" [fast_src/fast_protocol.cpp:317]   --->   Operation 91 'partselect' 'tmp_35' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 92 [1/1] (0.00ns)   --->   "%orderID_buff_5 = bitconcatenate i22 @_ssdm_op_BitConcatenate.i22.i7.i7.i8, i7 %tmp_32, i7 %tmp_35, i8 %or_ln317_1" [fast_src/fast_protocol.cpp:317]   --->   Operation 92 'bitconcatenate' 'orderID_buff_5' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 93 [1/1] (0.00ns)   --->   "%zext_ln250_2 = zext i22 %orderID_buff_5" [fast_src/fast_protocol.cpp:250]   --->   Operation 93 'zext' 'zext_ln250_2' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 94 [1/1] (1.82ns)   --->   "%tmp_36 = sparsemux i8 @_ssdm_op_SparseMux.ap_auto.4i8.i8.i3, i3 4, i8 %encoded_message_20, i3 5, i8 %encoded_message_21, i3 6, i8 %encoded_message_11, i3 7, i8 %encoded_message_13, i8 0, i3 %message_offset_16" [fast_src/fast_protocol.cpp:312]   --->   Operation 94 'sparsemux' 'tmp_36' <Predicate = (next_state_1_load == 6)> <Delay = 1.82> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 137 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node and_ln312_3)   --->   "%tmp_54 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %tmp_36, i32 7" [fast_src/fast_protocol.cpp:312]   --->   Operation 95 'bitselect' 'tmp_54' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 96 [1/1] (1.73ns)   --->   "%message_offset_21 = add i4 %zext_ln249, i4 5" [fast_src/fast_protocol.cpp:317]   --->   Operation 96 'add' 'message_offset_21' <Predicate = (next_state_1_load == 6)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 97 [1/1] (0.00ns) (grouped into LUT with out node or_ln317_2)   --->   "%shl_ln317_2 = shl i8 %tmp_34, i8 7" [fast_src/fast_protocol.cpp:317]   --->   Operation 97 'shl' 'shl_ln317_2' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 98 [1/1] (0.99ns) (out node of the LUT)   --->   "%or_ln317_2 = or i8 %shl_ln317_2, i8 %tmp_36" [fast_src/fast_protocol.cpp:317]   --->   Operation 98 'or' 'or_ln317_2' <Predicate = (next_state_1_load == 6)> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 99 [1/1] (0.00ns)   --->   "%tmp_38 = partselect i7 @_ssdm_op_PartSelect.i7.i8.i32.i32, i8 %or_ln317_1, i32 1, i32 7" [fast_src/fast_protocol.cpp:317]   --->   Operation 99 'partselect' 'tmp_38' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 100 [1/1] (0.00ns)   --->   "%orderID_buff_7 = bitconcatenate i25 @_ssdm_op_BitConcatenate.i25.i3.i7.i7.i8, i3 %trunc_ln3, i7 %tmp_35, i7 %tmp_38, i8 %or_ln317_2" [fast_src/fast_protocol.cpp:317]   --->   Operation 100 'bitconcatenate' 'orderID_buff_7' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node and_ln312)   --->   "%xor_ln312 = xor i1 %tmp_51, i1 1" [fast_src/fast_protocol.cpp:312]   --->   Operation 101 'xor' 'xor_ln312' <Predicate = (next_state_1_load == 6)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 102 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln312 = and i1 %tmp_52, i1 %xor_ln312" [fast_src/fast_protocol.cpp:312]   --->   Operation 102 'and' 'and_ln312' <Predicate = (next_state_1_load == 6)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node xor_ln312_2)   --->   "%or_ln312 = or i8 %orderID_buff_1, i8 %tmp_29" [fast_src/fast_protocol.cpp:312]   --->   Operation 103 'or' 'or_ln312' <Predicate = (next_state_1_load == 6)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 104 [1/1] (0.00ns) (grouped into LUT with out node xor_ln312_2)   --->   "%tmp_55 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %or_ln312, i32 7" [fast_src/fast_protocol.cpp:312]   --->   Operation 104 'bitselect' 'tmp_55' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 105 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln312_2 = xor i1 %tmp_55, i1 1" [fast_src/fast_protocol.cpp:312]   --->   Operation 105 'xor' 'xor_ln312_2' <Predicate = (next_state_1_load == 6)> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 106 [1/1] (0.97ns)   --->   "%and_ln312_1 = and i1 %tmp_53, i1 %xor_ln312_2" [fast_src/fast_protocol.cpp:312]   --->   Operation 106 'and' 'and_ln312_1' <Predicate = (next_state_1_load == 6)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node and_ln312_3)   --->   "%xor_ln312_1 = xor i1 %tmp_53, i1 1" [fast_src/fast_protocol.cpp:312]   --->   Operation 107 'xor' 'xor_ln312_1' <Predicate = (next_state_1_load == 6)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node and_ln312_3)   --->   "%and_ln312_2 = and i1 %tmp_54, i1 %xor_ln312_1" [fast_src/fast_protocol.cpp:312]   --->   Operation 108 'and' 'and_ln312_2' <Predicate = (next_state_1_load == 6)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 109 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln312_3 = and i1 %and_ln312_2, i1 %xor_ln312_2" [fast_src/fast_protocol.cpp:312]   --->   Operation 109 'and' 'and_ln312_3' <Predicate = (next_state_1_load == 6)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 110 [1/1] (0.00ns)   --->   "%sel_tmp3 = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i1.i1.i1.i1, i1 %tmp_51, i1 %and_ln312, i1 %and_ln312_1, i1 %and_ln312_3" [fast_src/fast_protocol.cpp:312]   --->   Operation 110 'bitconcatenate' 'sel_tmp3' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 111 [1/1] (1.82ns)   --->   "%orderID_buff179_s = sparsemux i25 @_ssdm_op_SparseMux.ap_auto.5i25.i25.i4, i4 8, i25 0, i4 4, i25 %zext_ln250, i4 2, i25 %zext_ln250_1, i4 1, i25 %zext_ln250_2, i4 0, i25 %orderID_buff_7, i25 0, i4 %sel_tmp3" [fast_src/fast_protocol.cpp:250]   --->   Operation 111 'sparsemux' 'orderID_buff179_s' <Predicate = (next_state_1_load == 6)> <Delay = 1.82> <CoreInst = "OneHotSparseMux_HasDef">   --->   Core 140 'OneHotSparseMux_HasDef' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 112 [1/1] (1.82ns)   --->   "%message_offset_22 = sparsemux i4 @_ssdm_op_SparseMux.ap_auto.5i4.i4.i4, i4 8, i4 %message_offset_17, i4 4, i4 %message_offset_18, i4 2, i4 %message_offset_19, i4 1, i4 %message_offset_20, i4 0, i4 %message_offset_21, i4 0, i4 %sel_tmp3" [fast_src/fast_protocol.cpp:303]   --->   Operation 112 'sparsemux' 'message_offset_22' <Predicate = (next_state_1_load == 6)> <Delay = 1.82> <CoreInst = "OneHotSparseMux_HasDef">   --->   Core 140 'OneHotSparseMux_HasDef' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 113 [1/1] (2.30ns)   --->   "%tmp_39 = sparsemux i7 @_ssdm_op_SparseMux.ap_auto.8i7.i7.i4, i4 5, i7 %trunc_ln245_9, i4 6, i7 %trunc_ln244_4, i4 7, i7 %trunc_ln260_1, i4 8, i7 %trunc_ln245_2, i4 9, i7 %trunc_ln244_1, i4 10, i7 %trunc_ln244_3, i4 11, i7 %trunc_ln244_6, i4 12, i7 %encoded_message_15, i7 0, i4 %message_offset_22" [fast_src/fast_protocol.cpp:322]   --->   Operation 113 'sparsemux' 'tmp_39' <Predicate = (next_state_1_load == 6)> <Delay = 2.30> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 137 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 2.30> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 114 [1/1] (0.00ns)   --->   "%orderID_buff_9 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %orderID_buff179_s, i7 %tmp_39" [fast_src/fast_protocol.cpp:322]   --->   Operation 114 'bitconcatenate' 'orderID_buff_9' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_1 : Operation 115 [1/1] (2.30ns)   --->   "%order_type_buff_1 = sparsemux i3 @_ssdm_op_SparseMux.ap_auto.8i3.i3.i4, i4 5, i3 %trunc_ln244_s, i4 6, i3 %trunc_ln8, i4 7, i3 %trunc_ln245_1, i4 8, i3 %trunc_ln7, i4 9, i3 %trunc_ln244_2, i4 10, i3 %trunc_ln244_5, i4 11, i3 %trunc_ln244_8, i4 12, i3 %encoded_message_17, i3 0, i4 %message_offset_22" [fast_src/fast_protocol.cpp:328]   --->   Operation 115 'sparsemux' 'order_type_buff_1' <Predicate = (next_state_1_load == 6)> <Delay = 2.30> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 137 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 2.30> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 116 [1/1] (1.58ns)   --->   "%store_ln331 = store i8 %size_buff_3, i8 %temp_order_size" [fast_src/fast_protocol.cpp:331]   --->   Operation 116 'store' 'store_ln331' <Predicate = (next_state_1_load == 6)> <Delay = 1.58>
ST_1 : Operation 117 [1/1] (1.58ns)   --->   "%store_ln332 = store i32 %orderID_buff_9, i32 %temp_order_orderID" [fast_src/fast_protocol.cpp:332]   --->   Operation 117 'store' 'store_ln332' <Predicate = (next_state_1_load == 6)> <Delay = 1.58>
ST_1 : Operation 118 [1/1] (1.58ns)   --->   "%store_ln333 = store i3 %order_type_buff_1, i3 %temp_order_type" [fast_src/fast_protocol.cpp:333]   --->   Operation 118 'store' 'store_ln333' <Predicate = (next_state_1_load == 6)> <Delay = 1.58>
ST_1 : Operation 119 [1/1] (1.94ns)   --->   "%store_ln334 = store i3 4, i3 %next_state_1" [fast_src/fast_protocol.cpp:334]   --->   Operation 119 'store' 'store_ln334' <Predicate = (next_state_1_load == 6)> <Delay = 1.94>
ST_1 : Operation 120 [1/1] (0.00ns)   --->   "%encoded_message = trunc i43 %second_packet_load" [fast_src/fast_protocol.cpp:122]   --->   Operation 120 'trunc' 'encoded_message' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 121 [1/1] (0.00ns)   --->   "%trunc_ln122_1 = trunc i43 %second_packet_load" [fast_src/fast_protocol.cpp:122]   --->   Operation 121 'trunc' 'trunc_ln122_1' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 122 [1/1] (0.00ns)   --->   "%trunc_ln122_2 = trunc i43 %second_packet_load" [fast_src/fast_protocol.cpp:122]   --->   Operation 122 'trunc' 'trunc_ln122_2' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 123 [1/1] (0.00ns)   --->   "%encoded_message_6 = partselect i8 @_ssdm_op_PartSelect.i8.i43.i32.i32, i43 %second_packet_load, i32 8, i32 15" [fast_src/fast_protocol.cpp:122]   --->   Operation 123 'partselect' 'encoded_message_6' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 124 [1/1] (0.00ns)   --->   "%trunc_ln4 = partselect i3 @_ssdm_op_PartSelect.i3.i43.i32.i32, i43 %second_packet_load, i32 8, i32 10" [fast_src/fast_protocol.cpp:121]   --->   Operation 124 'partselect' 'trunc_ln4' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 125 [1/1] (0.00ns)   --->   "%trunc_ln121_1 = partselect i7 @_ssdm_op_PartSelect.i7.i43.i32.i32, i43 %second_packet_load, i32 8, i32 14" [fast_src/fast_protocol.cpp:121]   --->   Operation 125 'partselect' 'trunc_ln121_1' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 126 [1/1] (0.00ns)   --->   "%encoded_message_7 = partselect i8 @_ssdm_op_PartSelect.i8.i43.i32.i32, i43 %second_packet_load, i32 16, i32 23" [fast_src/fast_protocol.cpp:122]   --->   Operation 126 'partselect' 'encoded_message_7' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 127 [1/1] (0.00ns)   --->   "%trunc_ln121_2 = partselect i3 @_ssdm_op_PartSelect.i3.i43.i32.i32, i43 %second_packet_load, i32 16, i32 18" [fast_src/fast_protocol.cpp:121]   --->   Operation 127 'partselect' 'trunc_ln121_2' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 128 [1/1] (0.00ns)   --->   "%trunc_ln121_3 = partselect i7 @_ssdm_op_PartSelect.i7.i43.i32.i32, i43 %second_packet_load, i32 16, i32 22" [fast_src/fast_protocol.cpp:121]   --->   Operation 128 'partselect' 'trunc_ln121_3' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 129 [1/1] (0.00ns)   --->   "%encoded_message_8 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %first_packet_load, i32 24, i32 31" [fast_src/fast_protocol.cpp:121]   --->   Operation 129 'partselect' 'encoded_message_8' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 130 [1/1] (0.00ns)   --->   "%trunc_ln122_5 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %first_packet_load, i32 24, i32 30" [fast_src/fast_protocol.cpp:122]   --->   Operation 130 'partselect' 'trunc_ln122_5' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 131 [1/1] (0.00ns)   --->   "%encoded_message_9 = partselect i8 @_ssdm_op_PartSelect.i8.i43.i32.i32, i43 %second_packet_load, i32 24, i32 31" [fast_src/fast_protocol.cpp:122]   --->   Operation 131 'partselect' 'encoded_message_9' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 132 [1/1] (0.00ns)   --->   "%trunc_ln121_5 = partselect i3 @_ssdm_op_PartSelect.i3.i43.i32.i32, i43 %second_packet_load, i32 24, i32 26" [fast_src/fast_protocol.cpp:121]   --->   Operation 132 'partselect' 'trunc_ln121_5' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 133 [1/1] (0.00ns)   --->   "%trunc_ln121_6 = partselect i7 @_ssdm_op_PartSelect.i7.i43.i32.i32, i43 %second_packet_load, i32 24, i32 30" [fast_src/fast_protocol.cpp:121]   --->   Operation 133 'partselect' 'trunc_ln121_6' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 134 [1/1] (0.00ns)   --->   "%encoded_message_10 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %first_packet_load, i32 32, i32 39" [fast_src/fast_protocol.cpp:121]   --->   Operation 134 'partselect' 'encoded_message_10' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 135 [1/1] (0.00ns)   --->   "%trunc_ln122_7 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %first_packet_load, i32 32, i32 38" [fast_src/fast_protocol.cpp:122]   --->   Operation 135 'partselect' 'trunc_ln122_7' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 136 [1/1] (0.00ns)   --->   "%encoded_message_1 = partselect i7 @_ssdm_op_PartSelect.i7.i43.i32.i32, i43 %second_packet_load, i32 32, i32 38" [fast_src/fast_protocol.cpp:122]   --->   Operation 136 'partselect' 'encoded_message_1' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 137 [1/1] (0.00ns)   --->   "%trunc_ln121_8 = partselect i3 @_ssdm_op_PartSelect.i3.i43.i32.i32, i43 %second_packet_load, i32 32, i32 34" [fast_src/fast_protocol.cpp:121]   --->   Operation 137 'partselect' 'trunc_ln121_8' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 138 [1/1] (0.00ns)   --->   "%encoded_message_2 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %first_packet_load, i32 40, i32 47" [fast_src/fast_protocol.cpp:121]   --->   Operation 138 'partselect' 'encoded_message_2' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 139 [1/1] (0.00ns)   --->   "%trunc_ln122_9 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %first_packet_load, i32 40, i32 46" [fast_src/fast_protocol.cpp:122]   --->   Operation 139 'partselect' 'trunc_ln122_9' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 140 [1/1] (0.00ns)   --->   "%encoded_message_3 = partselect i3 @_ssdm_op_PartSelect.i3.i43.i32.i32, i43 %second_packet_load, i32 40, i32 42" [fast_src/fast_protocol.cpp:122]   --->   Operation 140 'partselect' 'encoded_message_3' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 141 [1/1] (0.00ns)   --->   "%encoded_message_4 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %first_packet_load, i32 48, i32 55" [fast_src/fast_protocol.cpp:121]   --->   Operation 141 'partselect' 'encoded_message_4' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 142 [1/1] (0.00ns)   --->   "%trunc_ln121_s = partselect i3 @_ssdm_op_PartSelect.i3.i64.i32.i32, i64 %first_packet_load, i32 48, i32 50" [fast_src/fast_protocol.cpp:121]   --->   Operation 142 'partselect' 'trunc_ln121_s' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 143 [1/1] (0.00ns)   --->   "%trunc_ln121_4 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %first_packet_load, i32 48, i32 54" [fast_src/fast_protocol.cpp:121]   --->   Operation 143 'partselect' 'trunc_ln121_4' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 144 [1/1] (0.00ns)   --->   "%encoded_message_5 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %first_packet_load, i32 56, i32 63" [fast_src/fast_protocol.cpp:121]   --->   Operation 144 'partselect' 'encoded_message_5' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 145 [1/1] (0.00ns)   --->   "%trunc_ln5 = partselect i3 @_ssdm_op_PartSelect.i3.i64.i32.i32, i64 %first_packet_load, i32 56, i32 58" [fast_src/fast_protocol.cpp:137]   --->   Operation 145 'partselect' 'trunc_ln5' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 146 [1/1] (0.00ns)   --->   "%trunc_ln137_1 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %first_packet_load, i32 56, i32 62" [fast_src/fast_protocol.cpp:137]   --->   Operation 146 'partselect' 'trunc_ln137_1' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 147 [1/1] (0.00ns)   --->   "%decoded_exponent = partselect i2 @_ssdm_op_PartSelect.i2.i64.i32.i32, i64 %first_packet_load, i32 16, i32 17" [fast_src/fast_protocol.cpp:137]   --->   Operation 147 'partselect' 'decoded_exponent' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 148 [1/1] (0.00ns)   --->   "%tmp_23 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %first_packet_load, i32 31" [fast_src/fast_protocol.cpp:145]   --->   Operation 148 'bitselect' 'tmp_23' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 149 [1/1] (0.99ns)   --->   "%decoded_mantissa = select i1 %tmp_23, i7 0, i7 %trunc_ln122_5" [fast_src/fast_protocol.cpp:145]   --->   Operation 149 'select' 'decoded_mantissa' <Predicate = (next_state_1_load == 5)> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 150 [1/1] (0.00ns) (grouped into LUT with out node empty)   --->   "%zext_ln145 = zext i7 %decoded_mantissa" [fast_src/fast_protocol.cpp:145]   --->   Operation 150 'zext' 'zext_ln145' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 151 [1/1] (0.00ns) (grouped into LUT with out node message_offset_1)   --->   "%message_offset = select i1 %tmp_23, i3 3, i3 4" [fast_src/fast_protocol.cpp:145]   --->   Operation 151 'select' 'message_offset' <Predicate = (next_state_1_load == 5)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 152 [1/1] (1.24ns)   --->   "%select_ln151 = select i1 %tmp_23, i8 %encoded_message_8, i8 %encoded_message_10" [fast_src/fast_protocol.cpp:151]   --->   Operation 152 'select' 'select_ln151' <Predicate = (next_state_1_load == 5)> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 153 [1/1] (0.00ns)   --->   "%tmp_33 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %select_ln151, i32 7" [fast_src/fast_protocol.cpp:151]   --->   Operation 153 'bitselect' 'tmp_33' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 154 [1/1] (0.00ns) (grouped into LUT with out node message_offset_1)   --->   "%message_offset_5 = select i1 %tmp_23, i3 4, i3 5" [fast_src/fast_protocol.cpp:154]   --->   Operation 154 'select' 'message_offset_5' <Predicate = (next_state_1_load == 5)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 155 [1/1] (0.00ns) (grouped into LUT with out node empty)   --->   "%trunc_ln154 = trunc i7 %decoded_mantissa" [fast_src/fast_protocol.cpp:154]   --->   Operation 155 'trunc' 'trunc_ln154' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 156 [1/1] (0.00ns) (grouped into LUT with out node empty)   --->   "%shl_ln = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i1.i7, i1 %trunc_ln154, i7 0" [fast_src/fast_protocol.cpp:154]   --->   Operation 156 'bitconcatenate' 'shl_ln' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node empty)   --->   "%or_ln154 = or i8 %shl_ln, i8 %select_ln151" [fast_src/fast_protocol.cpp:154]   --->   Operation 157 'or' 'or_ln154' <Predicate = (next_state_1_load == 5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 158 [1/1] (0.00ns) (grouped into LUT with out node empty)   --->   "%tmp_40 = bitselect i1 @_ssdm_op_BitSelect.i1.i7.i32, i7 %decoded_mantissa, i32 1" [fast_src/fast_protocol.cpp:154]   --->   Operation 158 'bitselect' 'tmp_40' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 159 [1/1] (0.00ns) (grouped into LUT with out node empty)   --->   "%decoded_mantissa_1 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i1.i8, i1 %tmp_40, i8 %or_ln154" [fast_src/fast_protocol.cpp:154]   --->   Operation 159 'bitconcatenate' 'decoded_mantissa_1' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 160 [1/1] (0.98ns) (out node of the LUT)   --->   "%message_offset_1 = select i1 %tmp_33, i3 %message_offset, i3 %message_offset_5" [fast_src/fast_protocol.cpp:151]   --->   Operation 160 'select' 'message_offset_1' <Predicate = (next_state_1_load == 5)> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 161 [1/1] (1.70ns)   --->   "%tmp_15 = sparsemux i7 @_ssdm_op_SparseMux.ap_auto.3i7.i7.i3, i3 3, i7 %trunc_ln122_5, i3 4, i7 %trunc_ln122_7, i3 5, i7 %trunc_ln122_9, i7 0, i3 %message_offset_1" [fast_src/fast_protocol.cpp:159]   --->   Operation 161 'sparsemux' 'tmp_15' <Predicate = (next_state_1_load == 5)> <Delay = 1.70> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 137 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 1.70> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 162 [1/1] (0.99ns) (out node of the LUT)   --->   "%empty = select i1 %tmp_33, i9 %zext_ln145, i9 %decoded_mantissa_1" [fast_src/fast_protocol.cpp:151]   --->   Operation 162 'select' 'empty' <Predicate = (next_state_1_load == 5)> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 163 [1/1] (1.70ns)   --->   "%tmp_16 = sparsemux i8 @_ssdm_op_SparseMux.ap_auto.3i8.i8.i3, i3 3, i8 %encoded_message_10, i3 4, i8 %encoded_message_2, i3 5, i8 %encoded_message_4, i8 0, i3 %message_offset_1" [fast_src/fast_protocol.cpp:177]   --->   Operation 163 'sparsemux' 'tmp_16' <Predicate = (next_state_1_load == 5)> <Delay = 1.70> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 137 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 1.70> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 164 [1/1] (0.00ns) (grouped into LUT with out node size_buff)   --->   "%trunc_ln177 = trunc i8 %tmp_16" [fast_src/fast_protocol.cpp:177]   --->   Operation 164 'trunc' 'trunc_ln177' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 165 [1/1] (0.00ns)   --->   "%tmp_41 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %tmp_16, i32 7" [fast_src/fast_protocol.cpp:177]   --->   Operation 165 'bitselect' 'tmp_41' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node size_buff)   --->   "%xor_ln177 = xor i1 %tmp_41, i1 1" [fast_src/fast_protocol.cpp:177]   --->   Operation 166 'xor' 'xor_ln177' <Predicate = (next_state_1_load == 5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 167 [1/1] (0.97ns) (out node of the LUT)   --->   "%size_buff = and i1 %trunc_ln177, i1 %xor_ln177" [fast_src/fast_protocol.cpp:177]   --->   Operation 167 'and' 'size_buff' <Predicate = (next_state_1_load == 5)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 168 [1/1] (0.00ns) (grouped into LUT with out node message_offset_6)   --->   "%select_ln177 = select i1 %tmp_41, i3 1, i3 2" [fast_src/fast_protocol.cpp:177]   --->   Operation 168 'select' 'select_ln177' <Predicate = (next_state_1_load == 5)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 169 [1/1] (1.65ns) (out node of the LUT)   --->   "%message_offset_6 = add i3 %select_ln177, i3 %message_offset_1" [fast_src/fast_protocol.cpp:177]   --->   Operation 169 'add' 'message_offset_6' <Predicate = (next_state_1_load == 5)> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 170 [1/1] (0.00ns)   --->   "%zext_ln126 = zext i3 %message_offset_6" [fast_src/fast_protocol.cpp:126]   --->   Operation 170 'zext' 'zext_ln126' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 171 [1/1] (1.65ns)   --->   "%message_offset_7 = add i4 %zext_ln126, i4 1" [fast_src/fast_protocol.cpp:185]   --->   Operation 171 'add' 'message_offset_7' <Predicate = (next_state_1_load == 5)> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 172 [1/1] (1.82ns)   --->   "%tmp_17 = sparsemux i7 @_ssdm_op_SparseMux.ap_auto.4i7.i7.i3, i3 4, i7 %trunc_ln122_7, i3 5, i7 %trunc_ln122_9, i3 6, i7 %trunc_ln121_4, i3 7, i7 %trunc_ln137_1, i7 0, i3 %message_offset_6" [fast_src/fast_protocol.cpp:185]   --->   Operation 172 'sparsemux' 'tmp_17' <Predicate = (next_state_1_load == 5)> <Delay = 1.82> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 137 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 173 [1/1] (0.00ns)   --->   "%size_buff_1 = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i1.i7, i1 %size_buff, i7 %tmp_17" [fast_src/fast_protocol.cpp:185]   --->   Operation 173 'bitconcatenate' 'size_buff_1' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 174 [1/1] (1.82ns)   --->   "%orderID_buff = sparsemux i8 @_ssdm_op_SparseMux.ap_auto.4i8.i8.i3, i3 4, i8 %encoded_message_2, i3 5, i8 %encoded_message_4, i3 6, i8 %encoded_message_5, i3 7, i8 %encoded_message, i8 0, i3 %message_offset_6" [fast_src/fast_protocol.cpp:194]   --->   Operation 174 'sparsemux' 'orderID_buff' <Predicate = (next_state_1_load == 5)> <Delay = 1.82> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 137 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 175 [1/1] (0.00ns)   --->   "%tmp_42 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %orderID_buff, i32 7" [fast_src/fast_protocol.cpp:194]   --->   Operation 175 'bitselect' 'tmp_42' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 176 [1/1] (1.65ns)   --->   "%message_offset_8 = add i4 %zext_ln126, i4 2" [fast_src/fast_protocol.cpp:199]   --->   Operation 176 'add' 'message_offset_8' <Predicate = (next_state_1_load == 5)> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 177 [1/1] (0.00ns)   --->   "%zext_ln127 = zext i8 %orderID_buff" [fast_src/fast_protocol.cpp:127]   --->   Operation 177 'zext' 'zext_ln127' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 178 [1/1] (1.82ns)   --->   "%tmp_18 = sparsemux i8 @_ssdm_op_SparseMux.ap_auto.4i8.i8.i3, i3 4, i8 %encoded_message_4, i3 5, i8 %encoded_message_5, i3 6, i8 %encoded_message, i3 7, i8 %encoded_message_6, i8 0, i3 %message_offset_6" [fast_src/fast_protocol.cpp:194]   --->   Operation 178 'sparsemux' 'tmp_18' <Predicate = (next_state_1_load == 5)> <Delay = 1.82> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 137 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 179 [1/1] (0.00ns) (grouped into LUT with out node and_ln194)   --->   "%tmp_43 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %tmp_18, i32 7" [fast_src/fast_protocol.cpp:194]   --->   Operation 179 'bitselect' 'tmp_43' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 180 [1/1] (0.00ns) (grouped into LUT with out node or_ln199)   --->   "%shl_ln199 = shl i8 %orderID_buff, i8 7" [fast_src/fast_protocol.cpp:199]   --->   Operation 180 'shl' 'shl_ln199' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 181 [1/1] (1.65ns)   --->   "%message_offset_9 = add i4 %zext_ln126, i4 3" [fast_src/fast_protocol.cpp:199]   --->   Operation 181 'add' 'message_offset_9' <Predicate = (next_state_1_load == 5)> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 182 [1/1] (0.99ns) (out node of the LUT)   --->   "%or_ln199 = or i8 %shl_ln199, i8 %tmp_18" [fast_src/fast_protocol.cpp:199]   --->   Operation 182 'or' 'or_ln199' <Predicate = (next_state_1_load == 5)> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 183 [1/1] (0.00ns)   --->   "%tmp_19 = partselect i7 @_ssdm_op_PartSelect.i7.i8.i32.i32, i8 %orderID_buff, i32 1, i32 7" [fast_src/fast_protocol.cpp:199]   --->   Operation 183 'partselect' 'tmp_19' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 184 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i3 @_ssdm_op_PartSelect.i3.i8.i32.i32, i8 %orderID_buff, i32 1, i32 3" [fast_src/fast_protocol.cpp:199]   --->   Operation 184 'partselect' 'trunc_ln1' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 185 [1/1] (0.00ns)   --->   "%orderID_buff_2 = bitconcatenate i15 @_ssdm_op_BitConcatenate.i15.i7.i8, i7 %tmp_19, i8 %or_ln199" [fast_src/fast_protocol.cpp:199]   --->   Operation 185 'bitconcatenate' 'orderID_buff_2' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 186 [1/1] (0.00ns)   --->   "%zext_ln127_1 = zext i15 %orderID_buff_2" [fast_src/fast_protocol.cpp:127]   --->   Operation 186 'zext' 'zext_ln127_1' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 187 [1/1] (1.82ns)   --->   "%tmp_20 = sparsemux i8 @_ssdm_op_SparseMux.ap_auto.4i8.i8.i3, i3 4, i8 %encoded_message_5, i3 5, i8 %encoded_message, i3 6, i8 %encoded_message_6, i3 7, i8 %encoded_message_7, i8 0, i3 %message_offset_6" [fast_src/fast_protocol.cpp:194]   --->   Operation 187 'sparsemux' 'tmp_20' <Predicate = (next_state_1_load == 5)> <Delay = 1.82> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 137 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 188 [1/1] (0.00ns)   --->   "%tmp_44 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %tmp_20, i32 7" [fast_src/fast_protocol.cpp:194]   --->   Operation 188 'bitselect' 'tmp_44' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 189 [1/1] (1.73ns)   --->   "%message_offset_11 = add i4 %zext_ln126, i4 4" [fast_src/fast_protocol.cpp:199]   --->   Operation 189 'add' 'message_offset_11' <Predicate = (next_state_1_load == 5)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 190 [1/1] (0.00ns) (grouped into LUT with out node or_ln199_1)   --->   "%shl_ln199_1 = shl i8 %tmp_18, i8 7" [fast_src/fast_protocol.cpp:199]   --->   Operation 190 'shl' 'shl_ln199_1' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 191 [1/1] (0.99ns) (out node of the LUT)   --->   "%or_ln199_1 = or i8 %shl_ln199_1, i8 %tmp_20" [fast_src/fast_protocol.cpp:199]   --->   Operation 191 'or' 'or_ln199_1' <Predicate = (next_state_1_load == 5)> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 192 [1/1] (0.00ns)   --->   "%tmp_21 = partselect i7 @_ssdm_op_PartSelect.i7.i8.i32.i32, i8 %or_ln199, i32 1, i32 7" [fast_src/fast_protocol.cpp:199]   --->   Operation 192 'partselect' 'tmp_21' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 193 [1/1] (0.00ns)   --->   "%orderID_buff_4 = bitconcatenate i22 @_ssdm_op_BitConcatenate.i22.i7.i7.i8, i7 %tmp_19, i7 %tmp_21, i8 %or_ln199_1" [fast_src/fast_protocol.cpp:199]   --->   Operation 193 'bitconcatenate' 'orderID_buff_4' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 194 [1/1] (0.00ns)   --->   "%zext_ln127_2 = zext i22 %orderID_buff_4" [fast_src/fast_protocol.cpp:127]   --->   Operation 194 'zext' 'zext_ln127_2' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 195 [1/1] (1.82ns)   --->   "%tmp_26 = sparsemux i8 @_ssdm_op_SparseMux.ap_auto.4i8.i8.i3, i3 4, i8 %encoded_message, i3 5, i8 %encoded_message_6, i3 6, i8 %encoded_message_7, i3 7, i8 %encoded_message_9, i8 0, i3 %message_offset_6" [fast_src/fast_protocol.cpp:194]   --->   Operation 195 'sparsemux' 'tmp_26' <Predicate = (next_state_1_load == 5)> <Delay = 1.82> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 137 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 196 [1/1] (0.00ns) (grouped into LUT with out node and_ln194_3)   --->   "%tmp_45 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %tmp_26, i32 7" [fast_src/fast_protocol.cpp:194]   --->   Operation 196 'bitselect' 'tmp_45' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 197 [1/1] (1.73ns)   --->   "%message_offset_12 = add i4 %zext_ln126, i4 5" [fast_src/fast_protocol.cpp:199]   --->   Operation 197 'add' 'message_offset_12' <Predicate = (next_state_1_load == 5)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 198 [1/1] (0.00ns) (grouped into LUT with out node or_ln199_2)   --->   "%shl_ln199_2 = shl i8 %tmp_20, i8 7" [fast_src/fast_protocol.cpp:199]   --->   Operation 198 'shl' 'shl_ln199_2' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 199 [1/1] (0.99ns) (out node of the LUT)   --->   "%or_ln199_2 = or i8 %shl_ln199_2, i8 %tmp_26" [fast_src/fast_protocol.cpp:199]   --->   Operation 199 'or' 'or_ln199_2' <Predicate = (next_state_1_load == 5)> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 200 [1/1] (0.00ns)   --->   "%tmp_28 = partselect i7 @_ssdm_op_PartSelect.i7.i8.i32.i32, i8 %or_ln199_1, i32 1, i32 7" [fast_src/fast_protocol.cpp:199]   --->   Operation 200 'partselect' 'tmp_28' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 201 [1/1] (0.00ns)   --->   "%orderID_buff_6 = bitconcatenate i25 @_ssdm_op_BitConcatenate.i25.i3.i7.i7.i8, i3 %trunc_ln1, i7 %tmp_21, i7 %tmp_28, i8 %or_ln199_2" [fast_src/fast_protocol.cpp:199]   --->   Operation 201 'bitconcatenate' 'orderID_buff_6' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 202 [1/1] (0.00ns) (grouped into LUT with out node and_ln194)   --->   "%xor_ln194 = xor i1 %tmp_42, i1 1" [fast_src/fast_protocol.cpp:194]   --->   Operation 202 'xor' 'xor_ln194' <Predicate = (next_state_1_load == 5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 203 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln194 = and i1 %tmp_43, i1 %xor_ln194" [fast_src/fast_protocol.cpp:194]   --->   Operation 203 'and' 'and_ln194' <Predicate = (next_state_1_load == 5)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 204 [1/1] (0.00ns) (grouped into LUT with out node xor_ln194_2)   --->   "%or_ln194 = or i8 %orderID_buff, i8 %tmp_18" [fast_src/fast_protocol.cpp:194]   --->   Operation 204 'or' 'or_ln194' <Predicate = (next_state_1_load == 5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 205 [1/1] (0.00ns) (grouped into LUT with out node xor_ln194_2)   --->   "%tmp_46 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %or_ln194, i32 7" [fast_src/fast_protocol.cpp:194]   --->   Operation 205 'bitselect' 'tmp_46' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 206 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln194_2 = xor i1 %tmp_46, i1 1" [fast_src/fast_protocol.cpp:194]   --->   Operation 206 'xor' 'xor_ln194_2' <Predicate = (next_state_1_load == 5)> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 207 [1/1] (0.97ns)   --->   "%and_ln194_1 = and i1 %tmp_44, i1 %xor_ln194_2" [fast_src/fast_protocol.cpp:194]   --->   Operation 207 'and' 'and_ln194_1' <Predicate = (next_state_1_load == 5)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 208 [1/1] (0.00ns) (grouped into LUT with out node and_ln194_3)   --->   "%xor_ln194_1 = xor i1 %tmp_44, i1 1" [fast_src/fast_protocol.cpp:194]   --->   Operation 208 'xor' 'xor_ln194_1' <Predicate = (next_state_1_load == 5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 209 [1/1] (0.00ns) (grouped into LUT with out node and_ln194_3)   --->   "%and_ln194_2 = and i1 %tmp_45, i1 %xor_ln194_1" [fast_src/fast_protocol.cpp:194]   --->   Operation 209 'and' 'and_ln194_2' <Predicate = (next_state_1_load == 5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 210 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln194_3 = and i1 %and_ln194_2, i1 %xor_ln194_2" [fast_src/fast_protocol.cpp:194]   --->   Operation 210 'and' 'and_ln194_3' <Predicate = (next_state_1_load == 5)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 211 [1/1] (0.00ns)   --->   "%sel_tmp = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i1.i1.i1.i1, i1 %tmp_42, i1 %and_ln194, i1 %and_ln194_1, i1 %and_ln194_3" [fast_src/fast_protocol.cpp:194]   --->   Operation 211 'bitconcatenate' 'sel_tmp' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 212 [1/1] (1.82ns)   --->   "%orderID_buff_s = sparsemux i25 @_ssdm_op_SparseMux.ap_auto.5i25.i25.i4, i4 8, i25 0, i4 4, i25 %zext_ln127, i4 2, i25 %zext_ln127_1, i4 1, i25 %zext_ln127_2, i4 0, i25 %orderID_buff_6, i25 0, i4 %sel_tmp" [fast_src/fast_protocol.cpp:127]   --->   Operation 212 'sparsemux' 'orderID_buff_s' <Predicate = (next_state_1_load == 5)> <Delay = 1.82> <CoreInst = "OneHotSparseMux_HasDef">   --->   Core 140 'OneHotSparseMux_HasDef' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 213 [1/1] (1.82ns)   --->   "%message_offset_13 = sparsemux i4 @_ssdm_op_SparseMux.ap_auto.5i4.i4.i4, i4 8, i4 %message_offset_7, i4 4, i4 %message_offset_8, i4 2, i4 %message_offset_9, i4 1, i4 %message_offset_11, i4 0, i4 %message_offset_12, i4 0, i4 %sel_tmp" [fast_src/fast_protocol.cpp:185]   --->   Operation 213 'sparsemux' 'message_offset_13' <Predicate = (next_state_1_load == 5)> <Delay = 1.82> <CoreInst = "OneHotSparseMux_HasDef">   --->   Core 140 'OneHotSparseMux_HasDef' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 214 [1/1] (2.30ns)   --->   "%tmp_31 = sparsemux i7 @_ssdm_op_SparseMux.ap_auto.8i7.i7.i4, i4 5, i7 %trunc_ln122_9, i4 6, i7 %trunc_ln121_4, i4 7, i7 %trunc_ln137_1, i4 8, i7 %trunc_ln122_2, i4 9, i7 %trunc_ln121_1, i4 10, i7 %trunc_ln121_3, i4 11, i7 %trunc_ln121_6, i4 12, i7 %encoded_message_1, i7 0, i4 %message_offset_13" [fast_src/fast_protocol.cpp:204]   --->   Operation 214 'sparsemux' 'tmp_31' <Predicate = (next_state_1_load == 5)> <Delay = 2.30> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 137 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 2.30> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 215 [1/1] (0.00ns)   --->   "%orderID_buff_8 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %orderID_buff_s, i7 %tmp_31" [fast_src/fast_protocol.cpp:204]   --->   Operation 215 'bitconcatenate' 'orderID_buff_8' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_1 : Operation 216 [1/1] (2.30ns)   --->   "%order_type_buff = sparsemux i3 @_ssdm_op_SparseMux.ap_auto.8i3.i3.i4, i4 5, i3 %trunc_ln121_s, i4 6, i3 %trunc_ln5, i4 7, i3 %trunc_ln122_1, i4 8, i3 %trunc_ln4, i4 9, i3 %trunc_ln121_2, i4 10, i3 %trunc_ln121_5, i4 11, i3 %trunc_ln121_8, i4 12, i3 %encoded_message_3, i3 0, i4 %message_offset_13" [fast_src/fast_protocol.cpp:210]   --->   Operation 216 'sparsemux' 'order_type_buff' <Predicate = (next_state_1_load == 5)> <Delay = 2.30> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 137 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 2.30> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 217 [1/1] (1.58ns)   --->   "%store_ln213 = store i8 %size_buff_1, i8 %temp_order_size" [fast_src/fast_protocol.cpp:213]   --->   Operation 217 'store' 'store_ln213' <Predicate = (next_state_1_load == 5)> <Delay = 1.58>
ST_1 : Operation 218 [1/1] (1.58ns)   --->   "%store_ln214 = store i32 %orderID_buff_8, i32 %temp_order_orderID" [fast_src/fast_protocol.cpp:214]   --->   Operation 218 'store' 'store_ln214' <Predicate = (next_state_1_load == 5)> <Delay = 1.58>
ST_1 : Operation 219 [1/1] (1.58ns)   --->   "%store_ln215 = store i3 %order_type_buff, i3 %temp_order_type" [fast_src/fast_protocol.cpp:215]   --->   Operation 219 'store' 'store_ln215' <Predicate = (next_state_1_load == 5)> <Delay = 1.58>
ST_1 : Operation 220 [1/1] (1.94ns)   --->   "%store_ln216 = store i3 4, i3 %next_state_1" [fast_src/fast_protocol.cpp:216]   --->   Operation 220 'store' 'store_ln216' <Predicate = (next_state_1_load == 5)> <Delay = 1.94>
ST_1 : Operation 221 [1/1] (1.72ns)   --->   "%tmp_12 = nbreadreq i1 @_ssdm_op_NbReadReq.axis.i128P128A, i128 %lbRxDataIn, i32 1" [fast_src/fast_protocol.cpp:78]   --->   Operation 221 'nbreadreq' 'tmp_12' <Predicate = (next_state_1_load == 2)> <Delay = 1.72> <CoreInst = "regslice">   --->   Core 135 'regslice' <Latency = 0> <II = 1> <Delay = 1.72> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 222 [1/1] (0.00ns)   --->   "%br_ln78 = br i1 %tmp_12, void %if.end37, void %land.lhs.true21" [fast_src/fast_protocol.cpp:78]   --->   Operation 222 'br' 'br_ln78' <Predicate = (next_state_1_load == 2)> <Delay = 0.00>
ST_1 : Operation 223 [1/1] (1.77ns)   --->   "%tmp_14 = nbreadreq i1 @_ssdm_op_NbReadReq.axis.i96P128A, i96 %lbRxMetadataIn, i32 1" [fast_src/fast_protocol.cpp:78]   --->   Operation 223 'nbreadreq' 'tmp_14' <Predicate = (next_state_1_load == 2 & tmp_12)> <Delay = 1.77> <CoreInst = "regslice">   --->   Core 135 'regslice' <Latency = 0> <II = 1> <Delay = 2.10> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 224 [1/1] (0.00ns)   --->   "%br_ln79 = br i1 %tmp_14, void %if.end37, void %land.lhs.true23" [fast_src/fast_protocol.cpp:79]   --->   Operation 224 'br' 'br_ln79' <Predicate = (next_state_1_load == 2 & tmp_12)> <Delay = 0.00>
ST_1 : Operation 225 [2/2] (1.72ns)   --->   "%tmp_27 = nbwritereq i1 @_ssdm_op_NbWriteReq.axis.i128P128A, i128 %metadata_to_book, i32 1" [fast_src/fast_protocol.cpp:79]   --->   Operation 225 'nbwritereq' 'tmp_27' <Predicate = (next_state_1_load == 2 & tmp_12 & tmp_14)> <Delay = 1.72> <CoreInst = "regslice">   --->   Core 135 'regslice' <Latency = 0> <II = 1> <Delay = 1.72> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 226 [1/1] (1.57ns)   --->   "%tmp_s = nbreadreq i1 @_ssdm_op_NbReadReq.axis.i8P128A, i8 %lbPortOpenReplyIn, i32 1" [fast_src/fast_protocol.cpp:70]   --->   Operation 226 'nbreadreq' 'tmp_s' <Predicate = (next_state_1_load == 1)> <Delay = 1.57> <CoreInst = "regslice">   --->   Core 135 'regslice' <Latency = 0> <II = 1> <Delay = 2.22> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 227 [1/1] (0.00ns)   --->   "%br_ln70 = br i1 %tmp_s, void %if.end18, void %if.then16" [fast_src/fast_protocol.cpp:70]   --->   Operation 227 'br' 'br_ln70' <Predicate = (next_state_1_load == 1)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.37>
ST_2 : Operation 228 [1/1] (1.72ns)   --->   "%tmp_13 = nbreadreq i1 @_ssdm_op_NbReadReq.axis.i128P128A, i128 %lbRxDataIn, i32 1" [fast_src/fast_protocol.cpp:221]   --->   Operation 228 'nbreadreq' 'tmp_13' <Predicate = (next_state_1_load == 3)> <Delay = 1.72> <CoreInst = "regslice">   --->   Core 135 'regslice' <Latency = 0> <II = 1> <Delay = 1.72> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 229 [1/1] (0.00ns)   --->   "%br_ln221 = br i1 %tmp_13, void %if.end147, void %if.then140" [fast_src/fast_protocol.cpp:221]   --->   Operation 229 'br' 'br_ln221' <Predicate = (next_state_1_load == 3)> <Delay = 0.00>
ST_2 : Operation 230 [1/2] (1.72ns)   --->   "%tmp_27 = nbwritereq i1 @_ssdm_op_NbWriteReq.axis.i128P128A, i128 %metadata_to_book, i32 1" [fast_src/fast_protocol.cpp:79]   --->   Operation 230 'nbwritereq' 'tmp_27' <Predicate = (next_state_1_load == 2 & tmp_12 & tmp_14)> <Delay = 1.72> <CoreInst = "regslice">   --->   Core 135 'regslice' <Latency = 0> <II = 1> <Delay = 1.72> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 231 [1/1] (0.00ns)   --->   "%br_ln79 = br i1 %tmp_27, void %if.end37, void %land.lhs.true25" [fast_src/fast_protocol.cpp:79]   --->   Operation 231 'br' 'br_ln79' <Predicate = (next_state_1_load == 2 & tmp_12 & tmp_14)> <Delay = 0.00>
ST_2 : Operation 232 [1/1] (1.82ns)   --->   "%tmp_30 = nbreadreq i1 @_ssdm_op_NbReadReq.axis.i64P128A, i64 %tagsIn, i32 1" [fast_src/fast_protocol.cpp:79]   --->   Operation 232 'nbreadreq' 'tmp_30' <Predicate = (next_state_1_load == 2 & tmp_12 & tmp_14 & tmp_27)> <Delay = 1.82> <CoreInst = "regslice">   --->   Core 135 'regslice' <Latency = 0> <II = 1> <Delay = 2.48> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 233 [1/1] (0.00ns)   --->   "%br_ln80 = br i1 %tmp_30, void %if.end37, void %land.lhs.true27" [fast_src/fast_protocol.cpp:80]   --->   Operation 233 'br' 'br_ln80' <Predicate = (next_state_1_load == 2 & tmp_12 & tmp_14 & tmp_27)> <Delay = 0.00>
ST_2 : Operation 234 [2/2] (1.82ns)   --->   "%tmp_37 = nbwritereq i1 @_ssdm_op_NbWriteReq.axis.i64P128A, i64 %time_to_book, i32 1" [fast_src/fast_protocol.cpp:80]   --->   Operation 234 'nbwritereq' 'tmp_37' <Predicate = (next_state_1_load == 2 & tmp_12 & tmp_14 & tmp_27 & tmp_30)> <Delay = 1.82> <CoreInst = "regslice">   --->   Core 135 'regslice' <Latency = 0> <II = 1> <Delay = 2.48> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 235 [2/2] (1.82ns)   --->   "%tmp_11 = nbwritereq i1 @_ssdm_op_NbWriteReq.axis.i64P128A, i64 %order_to_book, i32 1" [fast_src/fast_protocol.cpp:338]   --->   Operation 235 'nbwritereq' 'tmp_11' <Predicate = (next_state_1_load == 4)> <Delay = 1.82> <CoreInst = "regslice">   --->   Core 135 'regslice' <Latency = 0> <II = 1> <Delay = 2.48> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 236 [2/2] (1.24ns)   --->   "%tmp = nbwritereq i1 @_ssdm_op_NbWriteReq.axis.i16P128A, i16 %lbRequestPortOpenOut, i32 1" [fast_src/fast_protocol.cpp:59]   --->   Operation 236 'nbwritereq' 'tmp' <Predicate = (next_state_1_load == 7) | (next_state_1_load == 0)> <Delay = 1.24> <CoreInst = "regslice">   --->   Core 135 'regslice' <Latency = 0> <II = 1> <Delay = 1.87> <Adapter> <Opcode : 'read' 'write'>

State 3 <SV = 2> <Delay = 5.47>
ST_3 : Operation 237 [1/1] (0.45ns)   --->   "%lbRxDataIn_read = read i128 @_ssdm_op_Read.axis.volatile.i128P128A, i128 %lbRxDataIn" [fast_src/fast_protocol.cpp:224]   --->   Operation 237 'read' 'lbRxDataIn_read' <Predicate = (next_state_1_load == 3 & tmp_13)> <Delay = 0.45> <CoreInst = "regslice">   --->   Core 135 'regslice' <Latency = 0> <II = 1> <Delay = 1.72> <Adapter> <Opcode : 'read' 'write'>
ST_3 : Operation 238 [1/1] (0.00ns)   --->   "%tempWord_data = trunc i128 %lbRxDataIn_read" [fast_src/fast_protocol.cpp:224]   --->   Operation 238 'trunc' 'tempWord_data' <Predicate = (next_state_1_load == 3 & tmp_13)> <Delay = 0.00>
ST_3 : Operation 239 [1/1] (0.00ns)   --->   "%tempWord_last = bitselect i1 @_ssdm_op_BitSelect.i1.i128.i128, i128 %lbRxDataIn_read, i128 72" [fast_src/fast_protocol.cpp:224]   --->   Operation 239 'bitselect' 'tempWord_last' <Predicate = (next_state_1_load == 3 & tmp_13)> <Delay = 0.00>
ST_3 : Operation 240 [1/1] (0.00ns)   --->   "%store_ln226 = store i43 %tempWord_data, i43 %second_packet" [fast_src/fast_protocol.cpp:226]   --->   Operation 240 'store' 'store_ln226' <Predicate = (next_state_1_load == 3 & tmp_13)> <Delay = 0.00>
ST_3 : Operation 241 [1/1] (0.00ns)   --->   "%br_ln228 = br i1 %tempWord_last, void %if.end146, void %if.then145" [fast_src/fast_protocol.cpp:228]   --->   Operation 241 'br' 'br_ln228' <Predicate = (next_state_1_load == 3 & tmp_13)> <Delay = 0.00>
ST_3 : Operation 242 [1/1] (1.94ns)   --->   "%store_ln232 = store i3 6, i3 %next_state_1" [fast_src/fast_protocol.cpp:232]   --->   Operation 242 'store' 'store_ln232' <Predicate = (next_state_1_load == 3 & tmp_13 & tempWord_last)> <Delay = 1.94>
ST_3 : Operation 243 [1/1] (0.00ns)   --->   "%br_ln233 = br void %if.end146" [fast_src/fast_protocol.cpp:233]   --->   Operation 243 'br' 'br_ln233' <Predicate = (next_state_1_load == 3 & tmp_13 & tempWord_last)> <Delay = 0.00>
ST_3 : Operation 244 [1/2] (1.82ns)   --->   "%tmp_37 = nbwritereq i1 @_ssdm_op_NbWriteReq.axis.i64P128A, i64 %time_to_book, i32 1" [fast_src/fast_protocol.cpp:80]   --->   Operation 244 'nbwritereq' 'tmp_37' <Predicate = (next_state_1_load == 2 & tmp_12 & tmp_14 & tmp_27 & tmp_30)> <Delay = 1.82> <CoreInst = "regslice">   --->   Core 135 'regslice' <Latency = 0> <II = 1> <Delay = 2.48> <Adapter> <Opcode : 'read' 'write'>
ST_3 : Operation 245 [1/1] (0.00ns)   --->   "%br_ln78 = br i1 %tmp_37, void %if.end37, void %if.then29" [fast_src/fast_protocol.cpp:78]   --->   Operation 245 'br' 'br_ln78' <Predicate = (next_state_1_load == 2 & tmp_12 & tmp_14 & tmp_27 & tmp_30)> <Delay = 0.00>
ST_3 : Operation 246 [1/1] (0.51ns)   --->   "%tagsIn_read = read i64 @_ssdm_op_Read.axis.volatile.i64P128A, i64 %tagsIn" [fast_src/fast_protocol.cpp:83]   --->   Operation 246 'read' 'tagsIn_read' <Predicate = (next_state_1_load == 2 & tmp_12 & tmp_14 & tmp_27 & tmp_30 & tmp_37)> <Delay = 0.51> <CoreInst = "regslice">   --->   Core 135 'regslice' <Latency = 0> <II = 1> <Delay = 2.48> <Adapter> <Opcode : 'read' 'write'>
ST_3 : Operation 247 [1/1] (0.48ns)   --->   "%lbRxMetadataIn_read = read i96 @_ssdm_op_Read.axis.volatile.i96P128A, i96 %lbRxMetadataIn" [fast_src/fast_protocol.cpp:87]   --->   Operation 247 'read' 'lbRxMetadataIn_read' <Predicate = (next_state_1_load == 2 & tmp_12 & tmp_14 & tmp_27 & tmp_30 & tmp_37)> <Delay = 0.48> <CoreInst = "regslice">   --->   Core 135 'regslice' <Latency = 0> <II = 1> <Delay = 2.10> <Adapter> <Opcode : 'read' 'write'>
ST_3 : Operation 248 [1/1] (0.00ns)   --->   "%tempMetadata_sourceSocket_port = trunc i96 %lbRxMetadataIn_read" [fast_src/fast_protocol.cpp:87]   --->   Operation 248 'trunc' 'tempMetadata_sourceSocket_port' <Predicate = (next_state_1_load == 2 & tmp_12 & tmp_14 & tmp_27 & tmp_30 & tmp_37)> <Delay = 0.00>
ST_3 : Operation 249 [1/1] (0.00ns)   --->   "%tempMetadata_sourceSocket_addr = partselect i32 @_ssdm_op_PartSelect.i32.i96.i32.i32, i96 %lbRxMetadataIn_read, i32 16, i32 47" [fast_src/fast_protocol.cpp:87]   --->   Operation 249 'partselect' 'tempMetadata_sourceSocket_addr' <Predicate = (next_state_1_load == 2 & tmp_12 & tmp_14 & tmp_27 & tmp_30 & tmp_37)> <Delay = 0.00>
ST_3 : Operation 250 [1/1] (0.00ns)   --->   "%tempMetadata_destinationSocket_port = partselect i16 @_ssdm_op_PartSelect.i16.i96.i32.i32, i96 %lbRxMetadataIn_read, i32 48, i32 63" [fast_src/fast_protocol.cpp:87]   --->   Operation 250 'partselect' 'tempMetadata_destinationSocket_port' <Predicate = (next_state_1_load == 2 & tmp_12 & tmp_14 & tmp_27 & tmp_30 & tmp_37)> <Delay = 0.00>
ST_3 : Operation 251 [1/1] (0.00ns)   --->   "%tempMetadata_destinationSocket_addr = partselect i32 @_ssdm_op_PartSelect.i32.i96.i32.i32, i96 %lbRxMetadataIn_read, i32 64, i32 95" [fast_src/fast_protocol.cpp:87]   --->   Operation 251 'partselect' 'tempMetadata_destinationSocket_addr' <Predicate = (next_state_1_load == 2 & tmp_12 & tmp_14 & tmp_27 & tmp_30 & tmp_37)> <Delay = 0.00>
ST_3 : Operation 252 [1/1] (0.00ns)   --->   "%p_s = bitconcatenate i128 @_ssdm_op_BitConcatenate.i128.i32.i16.i16.i32.i16.i16, i32 %tempMetadata_sourceSocket_addr, i16 0, i16 %tempMetadata_sourceSocket_port, i32 %tempMetadata_destinationSocket_addr, i16 0, i16 %tempMetadata_destinationSocket_port" [fast_src/fast_protocol.cpp:91]   --->   Operation 252 'bitconcatenate' 'p_s' <Predicate = (next_state_1_load == 2 & tmp_12 & tmp_14 & tmp_27 & tmp_30 & tmp_37)> <Delay = 0.00>
ST_3 : Operation 253 [2/2] (1.72ns)   --->   "%write_ln91 = write void @_ssdm_op_Write.axis.volatile.i128P128A, i128 %metadata_to_book, i128 %p_s" [fast_src/fast_protocol.cpp:91]   --->   Operation 253 'write' 'write_ln91' <Predicate = (next_state_1_load == 2 & tmp_12 & tmp_14 & tmp_27 & tmp_30 & tmp_37)> <Delay = 1.72> <CoreInst = "regslice">   --->   Core 135 'regslice' <Latency = 0> <II = 1> <Delay = 1.72> <Adapter> <Opcode : 'read' 'write'>
ST_3 : Operation 254 [1/1] (0.45ns)   --->   "%lbRxDataIn_read_1 = read i128 @_ssdm_op_Read.axis.volatile.i128P128A, i128 %lbRxDataIn" [fast_src/fast_protocol.cpp:96]   --->   Operation 254 'read' 'lbRxDataIn_read_1' <Predicate = (next_state_1_load == 2 & tmp_12 & tmp_14 & tmp_27 & tmp_30 & tmp_37)> <Delay = 0.45> <CoreInst = "regslice">   --->   Core 135 'regslice' <Latency = 0> <II = 1> <Delay = 1.72> <Adapter> <Opcode : 'read' 'write'>
ST_3 : Operation 255 [1/1] (0.00ns)   --->   "%tempWord_data_1 = trunc i128 %lbRxDataIn_read_1" [fast_src/fast_protocol.cpp:96]   --->   Operation 255 'trunc' 'tempWord_data_1' <Predicate = (next_state_1_load == 2 & tmp_12 & tmp_14 & tmp_27 & tmp_30 & tmp_37)> <Delay = 0.00>
ST_3 : Operation 256 [1/1] (0.00ns)   --->   "%tempWord_last_1 = bitselect i1 @_ssdm_op_BitSelect.i1.i128.i128, i128 %lbRxDataIn_read_1, i128 72" [fast_src/fast_protocol.cpp:96]   --->   Operation 256 'bitselect' 'tempWord_last_1' <Predicate = (next_state_1_load == 2 & tmp_12 & tmp_14 & tmp_27 & tmp_30 & tmp_37)> <Delay = 0.00>
ST_3 : Operation 257 [1/1] (0.00ns)   --->   "%store_ln98 = store i64 %tempWord_data_1, i64 %first_packet" [fast_src/fast_protocol.cpp:98]   --->   Operation 257 'store' 'store_ln98' <Predicate = (next_state_1_load == 2 & tmp_12 & tmp_14 & tmp_27 & tmp_30 & tmp_37)> <Delay = 0.00>
ST_3 : Operation 258 [1/1] (0.98ns)   --->   "%select_ln100 = select i1 %tempWord_last_1, i3 5, i3 3" [fast_src/fast_protocol.cpp:100]   --->   Operation 258 'select' 'select_ln100' <Predicate = (next_state_1_load == 2 & tmp_12 & tmp_14 & tmp_27 & tmp_30 & tmp_37)> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 259 [1/1] (1.94ns)   --->   "%store_ln100 = store i3 %select_ln100, i3 %next_state_1" [fast_src/fast_protocol.cpp:100]   --->   Operation 259 'store' 'store_ln100' <Predicate = (next_state_1_load == 2 & tmp_12 & tmp_14 & tmp_27 & tmp_30 & tmp_37)> <Delay = 1.94>
ST_3 : Operation 260 [1/1] (0.51ns)   --->   "%p_086 = read i8 @_ssdm_op_Read.axis.volatile.i8P128A, i8 %lbPortOpenReplyIn" [fast_src/fast_protocol.cpp:72]   --->   Operation 260 'read' 'p_086' <Predicate = (next_state_1_load == 1 & tmp_s)> <Delay = 0.51> <CoreInst = "regslice">   --->   Core 135 'regslice' <Latency = 0> <II = 1> <Delay = 2.22> <Adapter> <Opcode : 'read' 'write'>
ST_3 : Operation 261 [1/1] (1.94ns)   --->   "%store_ln73 = store i3 2, i3 %next_state_1" [fast_src/fast_protocol.cpp:73]   --->   Operation 261 'store' 'store_ln73' <Predicate = (next_state_1_load == 1 & tmp_s)> <Delay = 1.94>
ST_3 : Operation 262 [1/1] (0.00ns)   --->   "%br_ln74 = br void %if.end18" [fast_src/fast_protocol.cpp:74]   --->   Operation 262 'br' 'br_ln74' <Predicate = (next_state_1_load == 1 & tmp_s)> <Delay = 0.00>
ST_3 : Operation 263 [1/2] (1.82ns)   --->   "%tmp_11 = nbwritereq i1 @_ssdm_op_NbWriteReq.axis.i64P128A, i64 %order_to_book, i32 1" [fast_src/fast_protocol.cpp:338]   --->   Operation 263 'nbwritereq' 'tmp_11' <Predicate = (next_state_1_load == 4)> <Delay = 1.82> <CoreInst = "regslice">   --->   Core 135 'regslice' <Latency = 0> <II = 1> <Delay = 2.48> <Adapter> <Opcode : 'read' 'write'>
ST_3 : Operation 264 [1/1] (0.00ns)   --->   "%br_ln338 = br i1 %tmp_11, void %if.end274, void %if.then273" [fast_src/fast_protocol.cpp:338]   --->   Operation 264 'br' 'br_ln338' <Predicate = (next_state_1_load == 4)> <Delay = 0.00>
ST_3 : Operation 265 [1/1] (1.94ns)   --->   "%store_ln341 = store i3 2, i3 %next_state_1" [fast_src/fast_protocol.cpp:341]   --->   Operation 265 'store' 'store_ln341' <Predicate = (next_state_1_load == 4 & tmp_11)> <Delay = 1.94>
ST_3 : Operation 266 [1/2] (1.24ns)   --->   "%tmp = nbwritereq i1 @_ssdm_op_NbWriteReq.axis.i16P128A, i16 %lbRequestPortOpenOut, i32 1" [fast_src/fast_protocol.cpp:59]   --->   Operation 266 'nbwritereq' 'tmp' <Predicate = (next_state_1_load == 7) | (next_state_1_load == 0)> <Delay = 1.24> <CoreInst = "regslice">   --->   Core 135 'regslice' <Latency = 0> <II = 1> <Delay = 1.87> <Adapter> <Opcode : 'read' 'write'>
ST_3 : Operation 267 [1/1] (0.00ns)   --->   "%openPortWaitTime_load = load i32 %openPortWaitTime" [fast_src/fast_protocol.cpp:59]   --->   Operation 267 'load' 'openPortWaitTime_load' <Predicate = (next_state_1_load == 7) | (next_state_1_load == 0)> <Delay = 0.00>
ST_3 : Operation 268 [1/1] (2.55ns)   --->   "%icmp_ln59 = icmp_eq  i32 %openPortWaitTime_load, i32 0" [fast_src/fast_protocol.cpp:59]   --->   Operation 268 'icmp' 'icmp_ln59' <Predicate = (next_state_1_load == 7) | (next_state_1_load == 0)> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 269 [1/1] (0.97ns)   --->   "%and_ln59 = and i1 %tmp, i1 %icmp_ln59" [fast_src/fast_protocol.cpp:59]   --->   Operation 269 'and' 'and_ln59' <Predicate = (next_state_1_load == 7) | (next_state_1_load == 0)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 270 [1/1] (0.00ns)   --->   "%br_ln59 = br i1 %and_ln59, void %if.else, void %if.then" [fast_src/fast_protocol.cpp:59]   --->   Operation 270 'br' 'br_ln59' <Predicate = (next_state_1_load == 7) | (next_state_1_load == 0)> <Delay = 0.00>
ST_3 : Operation 271 [1/1] (2.55ns)   --->   "%add_ln66 = add i32 %openPortWaitTime_load, i32 4294967295" [fast_src/fast_protocol.cpp:66]   --->   Operation 271 'add' 'add_ln66' <Predicate = (next_state_1_load == 7 & !and_ln59) | (next_state_1_load == 0 & !and_ln59)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 272 [1/1] (0.00ns)   --->   "%store_ln66 = store i32 %add_ln66, i32 %openPortWaitTime" [fast_src/fast_protocol.cpp:66]   --->   Operation 272 'store' 'store_ln66' <Predicate = (next_state_1_load == 7 & !and_ln59) | (next_state_1_load == 0 & !and_ln59)> <Delay = 0.00>
ST_3 : Operation 273 [1/1] (0.00ns)   --->   "%br_ln0 = br void %if.end"   --->   Operation 273 'br' 'br_ln0' <Predicate = (next_state_1_load == 7 & !and_ln59) | (next_state_1_load == 0 & !and_ln59)> <Delay = 0.00>
ST_3 : Operation 274 [1/1] (1.94ns)   --->   "%store_ln62 = store i3 1, i3 %next_state_1" [fast_src/fast_protocol.cpp:62]   --->   Operation 274 'store' 'store_ln62' <Predicate = (next_state_1_load == 7 & and_ln59) | (next_state_1_load == 0 & and_ln59)> <Delay = 1.94>

State 4 <SV = 3> <Delay = 3.88>
ST_4 : Operation 275 [1/1] (1.56ns)   --->   "%sub_ln285 = sub i2 0, i2 %decoded_exponent_1" [fast_src/fast_protocol.cpp:285]   --->   Operation 275 'sub' 'sub_ln285' <Predicate = (next_state_1_load == 6)> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 276 [1/1] (0.00ns)   --->   "%zext_ln285 = zext i2 %sub_ln285" [fast_src/fast_protocol.cpp:285]   --->   Operation 276 'zext' 'zext_ln285' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_4 : Operation 277 [1/1] (0.00ns)   --->   "%POW10_addr_1 = getelementptr i9 %POW10, i64 0, i64 %zext_ln285" [fast_src/fast_protocol.cpp:285]   --->   Operation 277 'getelementptr' 'POW10_addr_1' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_4 : Operation 278 [2/2] (2.32ns)   --->   "%POW10_load_1 = load i2 %POW10_addr_1" [fast_src/fast_protocol.cpp:285]   --->   Operation 278 'load' 'POW10_load_1' <Predicate = (next_state_1_load == 6)> <Delay = 2.32> <CoreInst = "ROM">   --->   Core 94 'ROM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 9> <Depth = 4> <ROM>
ST_4 : Operation 279 [1/1] (1.56ns)   --->   "%sub_ln166 = sub i2 0, i2 %decoded_exponent" [fast_src/fast_protocol.cpp:166]   --->   Operation 279 'sub' 'sub_ln166' <Predicate = (next_state_1_load == 5)> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 280 [1/1] (0.00ns)   --->   "%zext_ln166 = zext i2 %sub_ln166" [fast_src/fast_protocol.cpp:166]   --->   Operation 280 'zext' 'zext_ln166' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_4 : Operation 281 [1/1] (0.00ns)   --->   "%POW10_addr = getelementptr i9 %POW10, i64 0, i64 %zext_ln166" [fast_src/fast_protocol.cpp:166]   --->   Operation 281 'getelementptr' 'POW10_addr' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_4 : Operation 282 [2/2] (2.32ns)   --->   "%POW10_load = load i2 %POW10_addr" [fast_src/fast_protocol.cpp:166]   --->   Operation 282 'load' 'POW10_load' <Predicate = (next_state_1_load == 5)> <Delay = 2.32> <CoreInst = "ROM">   --->   Core 94 'ROM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 9> <Depth = 4> <ROM>
ST_4 : Operation 283 [2/2] (1.82ns)   --->   "%write_ln83 = write void @_ssdm_op_Write.axis.volatile.i64P128A, i64 %time_to_book, i64 %tagsIn_read" [fast_src/fast_protocol.cpp:83]   --->   Operation 283 'write' 'write_ln83' <Predicate = (next_state_1_load == 2 & tmp_12 & tmp_14 & tmp_27 & tmp_30 & tmp_37)> <Delay = 1.82> <CoreInst = "regslice">   --->   Core 135 'regslice' <Latency = 0> <II = 1> <Delay = 2.48> <Adapter> <Opcode : 'read' 'write'>
ST_4 : Operation 284 [1/2] (1.72ns)   --->   "%write_ln91 = write void @_ssdm_op_Write.axis.volatile.i128P128A, i128 %metadata_to_book, i128 %p_s" [fast_src/fast_protocol.cpp:91]   --->   Operation 284 'write' 'write_ln91' <Predicate = (next_state_1_load == 2 & tmp_12 & tmp_14 & tmp_27 & tmp_30 & tmp_37)> <Delay = 1.72> <CoreInst = "regslice">   --->   Core 135 'regslice' <Latency = 0> <II = 1> <Delay = 1.72> <Adapter> <Opcode : 'read' 'write'>
ST_4 : Operation 285 [1/1] (0.00ns)   --->   "%temp_order_price_load = load i16 %temp_order_price" [fast_src/fast_protocol.cpp:340]   --->   Operation 285 'load' 'temp_order_price_load' <Predicate = (next_state_1_load == 4 & tmp_11)> <Delay = 0.00>
ST_4 : Operation 286 [1/1] (0.00ns)   --->   "%temp_order_size_load = load i8 %temp_order_size" [fast_src/fast_protocol.cpp:340]   --->   Operation 286 'load' 'temp_order_size_load' <Predicate = (next_state_1_load == 4 & tmp_11)> <Delay = 0.00>
ST_4 : Operation 287 [1/1] (0.00ns)   --->   "%temp_order_orderID_load = load i32 %temp_order_orderID" [fast_src/fast_protocol.cpp:340]   --->   Operation 287 'load' 'temp_order_orderID_load' <Predicate = (next_state_1_load == 4 & tmp_11)> <Delay = 0.00>
ST_4 : Operation 288 [1/1] (0.00ns)   --->   "%temp_order_type_load = load i3 %temp_order_type" [fast_src/fast_protocol.cpp:340]   --->   Operation 288 'load' 'temp_order_type_load' <Predicate = (next_state_1_load == 4 & tmp_11)> <Delay = 0.00>
ST_4 : Operation 289 [1/1] (0.00ns)   --->   "%or_ln340_5 = bitconcatenate i59 @_ssdm_op_BitConcatenate.i59.i3.i32.i8.i16, i3 %temp_order_type_load, i32 %temp_order_orderID_load, i8 %temp_order_size_load, i16 %temp_order_price_load" [fast_src/fast_protocol.cpp:340]   --->   Operation 289 'bitconcatenate' 'or_ln340_5' <Predicate = (next_state_1_load == 4 & tmp_11)> <Delay = 0.00>
ST_4 : Operation 290 [1/1] (0.00ns)   --->   "%zext_ln340 = zext i59 %or_ln340_5" [fast_src/fast_protocol.cpp:340]   --->   Operation 290 'zext' 'zext_ln340' <Predicate = (next_state_1_load == 4 & tmp_11)> <Delay = 0.00>
ST_4 : Operation 291 [2/2] (1.82ns)   --->   "%write_ln340 = write void @_ssdm_op_Write.axis.volatile.i64P128A, i64 %order_to_book, i64 %zext_ln340" [fast_src/fast_protocol.cpp:340]   --->   Operation 291 'write' 'write_ln340' <Predicate = (next_state_1_load == 4 & tmp_11)> <Delay = 1.82> <CoreInst = "regslice">   --->   Core 135 'regslice' <Latency = 0> <II = 1> <Delay = 2.48> <Adapter> <Opcode : 'read' 'write'>
ST_4 : Operation 292 [2/2] (1.24ns)   --->   "%write_ln61 = write void @_ssdm_op_Write.axis.volatile.i16P128A, i16 %lbRequestPortOpenOut, i16 641" [fast_src/fast_protocol.cpp:61]   --->   Operation 292 'write' 'write_ln61' <Predicate = (next_state_1_load == 7 & and_ln59) | (next_state_1_load == 0 & and_ln59)> <Delay = 1.24> <CoreInst = "regslice">   --->   Core 135 'regslice' <Latency = 0> <II = 1> <Delay = 1.87> <Adapter> <Opcode : 'read' 'write'>

State 5 <SV = 4> <Delay = 9.49>
ST_5 : Operation 293 [1/1] (0.00ns)   --->   "%or_ln1 = bitconcatenate i16 @_ssdm_op_BitConcatenate.i16.i9.i7, i9 %empty_31, i7 %tmp_22" [fast_src/fast_protocol.cpp:280]   --->   Operation 293 'bitconcatenate' 'or_ln1' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_5 : Operation 294 [1/2] ( I:2.32ns O:2.32ns )   --->   "%POW10_load_1 = load i2 %POW10_addr_1" [fast_src/fast_protocol.cpp:285]   --->   Operation 294 'load' 'POW10_load_1' <Predicate = (next_state_1_load == 6)> <Delay = 2.32> <CoreInst = "ROM">   --->   Core 94 'ROM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 9> <Depth = 4> <ROM>
ST_5 : Operation 295 [1/1] (0.00ns)   --->   "%POW10_load_1_cast = zext i9 %POW10_load_1" [fast_src/fast_protocol.cpp:285]   --->   Operation 295 'zext' 'POW10_load_1_cast' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_5 : Operation 296 [1/1] (5.58ns)   --->   "%price_buff_1 = mul i16 %or_ln1, i16 %POW10_load_1_cast" [fast_src/fast_protocol.cpp:285]   --->   Operation 296 'mul' 'price_buff_1' <Predicate = (next_state_1_load == 6)> <Delay = 5.58> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 297 [1/1] (1.58ns)   --->   "%store_ln330 = store i16 %price_buff_1, i16 %temp_order_price" [fast_src/fast_protocol.cpp:330]   --->   Operation 297 'store' 'store_ln330' <Predicate = (next_state_1_load == 6)> <Delay = 1.58>
ST_5 : Operation 298 [1/1] (0.00ns)   --->   "%br_ln336 = br void %sw.epilog" [fast_src/fast_protocol.cpp:336]   --->   Operation 298 'br' 'br_ln336' <Predicate = (next_state_1_load == 6)> <Delay = 0.00>
ST_5 : Operation 299 [1/1] (0.00ns)   --->   "%br_ln234 = br void %if.end147" [fast_src/fast_protocol.cpp:234]   --->   Operation 299 'br' 'br_ln234' <Predicate = (next_state_1_load == 3 & tmp_13)> <Delay = 0.00>
ST_5 : Operation 300 [1/1] (0.00ns)   --->   "%br_ln235 = br void %sw.epilog" [fast_src/fast_protocol.cpp:235]   --->   Operation 300 'br' 'br_ln235' <Predicate = (next_state_1_load == 3)> <Delay = 0.00>
ST_5 : Operation 301 [1/1] (0.00ns)   --->   "%or_ln = bitconcatenate i16 @_ssdm_op_BitConcatenate.i16.i9.i7, i9 %empty, i7 %tmp_15" [fast_src/fast_protocol.cpp:159]   --->   Operation 301 'bitconcatenate' 'or_ln' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_5 : Operation 302 [1/2] ( I:2.32ns O:2.32ns )   --->   "%POW10_load = load i2 %POW10_addr" [fast_src/fast_protocol.cpp:166]   --->   Operation 302 'load' 'POW10_load' <Predicate = (next_state_1_load == 5)> <Delay = 2.32> <CoreInst = "ROM">   --->   Core 94 'ROM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 9> <Depth = 4> <ROM>
ST_5 : Operation 303 [1/1] (0.00ns)   --->   "%POW10_load_cast = zext i9 %POW10_load" [fast_src/fast_protocol.cpp:166]   --->   Operation 303 'zext' 'POW10_load_cast' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_5 : Operation 304 [1/1] (5.58ns)   --->   "%price_buff = mul i16 %or_ln, i16 %POW10_load_cast" [fast_src/fast_protocol.cpp:166]   --->   Operation 304 'mul' 'price_buff' <Predicate = (next_state_1_load == 5)> <Delay = 5.58> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.58> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 305 [1/1] (1.58ns)   --->   "%store_ln212 = store i16 %price_buff, i16 %temp_order_price" [fast_src/fast_protocol.cpp:212]   --->   Operation 305 'store' 'store_ln212' <Predicate = (next_state_1_load == 5)> <Delay = 1.58>
ST_5 : Operation 306 [1/1] (0.00ns)   --->   "%br_ln218 = br void %sw.epilog" [fast_src/fast_protocol.cpp:218]   --->   Operation 306 'br' 'br_ln218' <Predicate = (next_state_1_load == 5)> <Delay = 0.00>
ST_5 : Operation 307 [1/2] (1.82ns)   --->   "%write_ln83 = write void @_ssdm_op_Write.axis.volatile.i64P128A, i64 %time_to_book, i64 %tagsIn_read" [fast_src/fast_protocol.cpp:83]   --->   Operation 307 'write' 'write_ln83' <Predicate = (next_state_1_load == 2 & tmp_12 & tmp_14 & tmp_27 & tmp_30 & tmp_37)> <Delay = 1.82> <CoreInst = "regslice">   --->   Core 135 'regslice' <Latency = 0> <II = 1> <Delay = 2.48> <Adapter> <Opcode : 'read' 'write'>
ST_5 : Operation 308 [1/1] (0.00ns)   --->   "%br_ln110 = br void %if.end37" [fast_src/fast_protocol.cpp:110]   --->   Operation 308 'br' 'br_ln110' <Predicate = (next_state_1_load == 2 & tmp_12 & tmp_14 & tmp_27 & tmp_30 & tmp_37)> <Delay = 0.00>
ST_5 : Operation 309 [1/1] (0.00ns)   --->   "%br_ln111 = br void %sw.epilog" [fast_src/fast_protocol.cpp:111]   --->   Operation 309 'br' 'br_ln111' <Predicate = (next_state_1_load == 2)> <Delay = 0.00>
ST_5 : Operation 310 [1/1] (0.00ns)   --->   "%br_ln75 = br void %sw.epilog" [fast_src/fast_protocol.cpp:75]   --->   Operation 310 'br' 'br_ln75' <Predicate = (next_state_1_load == 1)> <Delay = 0.00>
ST_5 : Operation 311 [1/2] (1.82ns)   --->   "%write_ln340 = write void @_ssdm_op_Write.axis.volatile.i64P128A, i64 %order_to_book, i64 %zext_ln340" [fast_src/fast_protocol.cpp:340]   --->   Operation 311 'write' 'write_ln340' <Predicate = (next_state_1_load == 4 & tmp_11)> <Delay = 1.82> <CoreInst = "regslice">   --->   Core 135 'regslice' <Latency = 0> <II = 1> <Delay = 2.48> <Adapter> <Opcode : 'read' 'write'>
ST_5 : Operation 312 [1/1] (0.00ns)   --->   "%br_ln342 = br void %if.end274" [fast_src/fast_protocol.cpp:342]   --->   Operation 312 'br' 'br_ln342' <Predicate = (next_state_1_load == 4 & tmp_11)> <Delay = 0.00>
ST_5 : Operation 313 [1/1] (0.00ns)   --->   "%br_ln343 = br void %sw.epilog" [fast_src/fast_protocol.cpp:343]   --->   Operation 313 'br' 'br_ln343' <Predicate = (next_state_1_load == 4)> <Delay = 0.00>
ST_5 : Operation 314 [1/2] (1.24ns)   --->   "%write_ln61 = write void @_ssdm_op_Write.axis.volatile.i16P128A, i16 %lbRequestPortOpenOut, i16 641" [fast_src/fast_protocol.cpp:61]   --->   Operation 314 'write' 'write_ln61' <Predicate = (next_state_1_load == 7 & and_ln59) | (next_state_1_load == 0 & and_ln59)> <Delay = 1.24> <CoreInst = "regslice">   --->   Core 135 'regslice' <Latency = 0> <II = 1> <Delay = 1.87> <Adapter> <Opcode : 'read' 'write'>
ST_5 : Operation 315 [1/1] (0.00ns)   --->   "%br_ln63 = br void %if.end" [fast_src/fast_protocol.cpp:63]   --->   Operation 315 'br' 'br_ln63' <Predicate = (next_state_1_load == 7 & and_ln59) | (next_state_1_load == 0 & and_ln59)> <Delay = 0.00>
ST_5 : Operation 316 [1/1] (0.00ns)   --->   "%br_ln68 = br void %sw.epilog" [fast_src/fast_protocol.cpp:68]   --->   Operation 316 'br' 'br_ln68' <Predicate = (next_state_1_load == 7) | (next_state_1_load == 0)> <Delay = 0.00>
ST_5 : Operation 317 [1/1] (0.00ns)   --->   "%ret_ln345 = ret" [fast_src/fast_protocol.cpp:345]   --->   Operation 317 'ret' 'ret_ln345' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 25.000ns, clock uncertainty: 6.750ns.

 <State 1>: 15.098ns
The critical path consists of the following:
	'load' operation 64 bit ('first_packet_load', fast_src/fast_protocol.cpp:56) on static variable 'first_packet' [28]  (0.000 ns)
	'select' operation 8 bit ('select_ln272', fast_src/fast_protocol.cpp:272) [64]  (1.248 ns)
	'select' operation 3 bit ('message_offset', fast_src/fast_protocol.cpp:272) [72]  (0.980 ns)
	'sparsemux' operation 8 bit ('tmp_24', fast_src/fast_protocol.cpp:295) [82]  (1.707 ns)
	'select' operation 3 bit ('select_ln295', fast_src/fast_protocol.cpp:295) [87]  (0.000 ns)
	'add' operation 3 bit ('message_offset', fast_src/fast_protocol.cpp:295) [88]  (1.650 ns)
	'sparsemux' operation 8 bit ('orderID_buff', fast_src/fast_protocol.cpp:312) [93]  (1.827 ns)
	'or' operation 8 bit ('or_ln312', fast_src/fast_protocol.cpp:312) [123]  (0.000 ns)
	'xor' operation 1 bit ('xor_ln312_2', fast_src/fast_protocol.cpp:312) [125]  (0.990 ns)
	'and' operation 1 bit ('and_ln312_3', fast_src/fast_protocol.cpp:312) [129]  (0.978 ns)
	'sparsemux' operation 4 bit ('message_offset', fast_src/fast_protocol.cpp:303) [132]  (1.827 ns)
	'sparsemux' operation 7 bit ('tmp_39', fast_src/fast_protocol.cpp:322) [133]  (2.304 ns)
	'store' operation 0 bit ('store_ln332', fast_src/fast_protocol.cpp:332) of variable 'orderID_buff', fast_src/fast_protocol.cpp:322 on static variable 'temp_order_orderID' [138]  (1.588 ns)

 <State 2>: 5.378ns
The critical path consists of the following:
	axis request operation ('tmp_27', fast_src/fast_protocol.cpp:79) on port 'metadata_to_book' (fast_src/fast_protocol.cpp:79) [276]  (1.724 ns)
	axis request operation ('tmp_30', fast_src/fast_protocol.cpp:79) on port 'tagsIn' (fast_src/fast_protocol.cpp:79) [279]  (1.827 ns)
	axis request operation ('tmp_37', fast_src/fast_protocol.cpp:80) on port 'time_to_book' (fast_src/fast_protocol.cpp:80) [282]  (1.827 ns)

 <State 3>: 5.476ns
The critical path consists of the following:
	axis request operation ('tmp_37', fast_src/fast_protocol.cpp:80) on port 'time_to_book' (fast_src/fast_protocol.cpp:80) [282]  (1.827 ns)
	axis read operation ('lbRxDataIn_read_1', fast_src/fast_protocol.cpp:96) on port 'lbRxDataIn' (fast_src/fast_protocol.cpp:96) [294]  (0.456 ns)
	'select' operation 3 bit ('select_ln100', fast_src/fast_protocol.cpp:100) [298]  (0.980 ns)
	'store' operation 0 bit ('store_ln100', fast_src/fast_protocol.cpp:100) of variable 'select_ln100', fast_src/fast_protocol.cpp:100 on static variable 'next_state_1' [299]  (1.946 ns)
	blocking operation 0.267 ns on control path)

 <State 4>: 3.887ns
The critical path consists of the following:
	'sub' operation 2 bit ('sub_ln285', fast_src/fast_protocol.cpp:285) [76]  (1.565 ns)
	'getelementptr' operation 2 bit ('POW10_addr_1', fast_src/fast_protocol.cpp:285) [78]  (0.000 ns)
	'load' operation 9 bit ('POW10_load_1', fast_src/fast_protocol.cpp:285) on array 'POW10' [79]  (2.322 ns)

 <State 5>: 9.490ns
The critical path consists of the following:
	'load' operation 9 bit ('POW10_load_1', fast_src/fast_protocol.cpp:285) on array 'POW10' [79]  (2.322 ns)
	'mul' operation 16 bit ('price_buff', fast_src/fast_protocol.cpp:285) [81]  (5.580 ns)
	'store' operation 0 bit ('store_ln330', fast_src/fast_protocol.cpp:330) of variable 'price_buff', fast_src/fast_protocol.cpp:285 on static variable 'temp_order_price' [136]  (1.588 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
