-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fast_protocol_txPath is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    time_from_book_TVALID : IN STD_LOGIC;
    metadata_from_book_TVALID : IN STD_LOGIC;
    lbTxMetadataOut_TREADY : IN STD_LOGIC;
    order_from_book_TVALID : IN STD_LOGIC;
    lbTxDataOut_TREADY : IN STD_LOGIC;
    lbTxLengthOut_TREADY : IN STD_LOGIC;
    tagsOut_TREADY : IN STD_LOGIC;
    metadata_from_book_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    metadata_from_book_TREADY : OUT STD_LOGIC;
    lbTxDataOut_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    lbTxDataOut_TVALID : OUT STD_LOGIC;
    lbTxMetadataOut_TDATA : OUT STD_LOGIC_VECTOR (95 downto 0);
    lbTxMetadataOut_TVALID : OUT STD_LOGIC;
    lbTxLengthOut_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    lbTxLengthOut_TVALID : OUT STD_LOGIC;
    time_from_book_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    time_from_book_TREADY : OUT STD_LOGIC;
    tagsOut_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    tagsOut_TVALID : OUT STD_LOGIC;
    order_from_book_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    order_from_book_TREADY : OUT STD_LOGIC );
end;


architecture behav of fast_protocol_txPath is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_iter0_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_iter0_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_iter0_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_iter0_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_ST_iter1_fsm_state5 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_iter1_fsm_state6 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_ST_iter1_fsm_state0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv16_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv32_818081FC : STD_LOGIC_VECTOR (31 downto 0) := "10000001100000001000000111111100";
    constant ap_const_boolean_0 : BOOLEAN := false;

attribute shreg_extract : string;
    signal ap_CS_iter0_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    signal ap_CS_iter0_fsm_state1 : STD_LOGIC;
    signal ap_CS_iter1_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    signal ap_CS_iter1_fsm_state0 : STD_LOGIC;
    signal ap_CS_iter0_fsm_state4 : STD_LOGIC;
    signal next_state_load_reg_1303 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_reg_1307 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1311 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1315 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_1319 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_1331 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nbwritereq_fu_258_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op44_read_state4 : BOOLEAN;
    signal ap_predicate_op45_read_state4 : BOOLEAN;
    signal ap_predicate_op50_write_state4 : BOOLEAN;
    signal ap_predicate_op51_read_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal next_state_load_reg_1303_pp0_iter0_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_reg_1323 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1323_pp0_iter0_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op74_write_state5 : BOOLEAN;
    signal tmp_2_reg_1327 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1327_pp0_iter0_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1335 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op80_write_state5 : BOOLEAN;
    signal ap_predicate_op84_write_state5 : BOOLEAN;
    signal tmp_reg_1307_pp0_iter0_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1311_pp0_iter0_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1315_pp0_iter0_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_1319_pp0_iter0_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_1331_pp0_iter0_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1339 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op85_write_state5 : BOOLEAN;
    signal ap_predicate_op86_write_state5 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_CS_iter1_fsm_state5 : STD_LOGIC;
    signal ap_predicate_op107_write_state6 : BOOLEAN;
    signal ap_predicate_op110_write_state6 : BOOLEAN;
    signal ap_predicate_op111_write_state6 : BOOLEAN;
    signal ap_predicate_op114_write_state6 : BOOLEAN;
    signal regslice_both_lbTxDataOut_U_apdone_blk : STD_LOGIC;
    signal regslice_both_lbTxMetadataOut_U_apdone_blk : STD_LOGIC;
    signal regslice_both_lbTxLengthOut_U_apdone_blk : STD_LOGIC;
    signal regslice_both_tagsOut_U_apdone_blk : STD_LOGIC;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_CS_iter1_fsm_state6 : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal next_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal first_packet_data : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal second_packet_data : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal lbPacketLength : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal metadata_from_book_TDATA_blk_n : STD_LOGIC;
    signal lbTxDataOut_TDATA_blk_n : STD_LOGIC;
    signal lbTxMetadataOut_TDATA_blk_n : STD_LOGIC;
    signal lbTxLengthOut_TDATA_blk_n : STD_LOGIC;
    signal time_from_book_TDATA_blk_n : STD_LOGIC;
    signal tagsOut_TDATA_blk_n : STD_LOGIC;
    signal order_from_book_TDATA_blk_n : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal tmp_nbreadreq_fu_210_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_nbreadreq_fu_218_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_nbreadreq_fu_226_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_iter0_fsm_state2 : STD_LOGIC;
    signal grp_nbwritereq_fu_242_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_iter0_fsm_state3 : STD_LOGIC;
    signal grp_nbwritereq_fu_250_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal time_from_book_read_reg_1343 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_fu_369_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_1353 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_1361 : STD_LOGIC_VECTOR (6 downto 0);
    signal curr_byte_1_fu_395_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal curr_byte_1_reg_1366 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln415_fu_405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1372 : STD_LOGIC_VECTOR (0 downto 0);
    signal message_offset_1_fu_419_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal message_offset_1_reg_1379 : STD_LOGIC_VECTOR (2 downto 0);
    signal curr_byte_2_fu_433_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal curr_byte_2_reg_1384 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln415_1_fu_443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_1_reg_1391 : STD_LOGIC_VECTOR (0 downto 0);
    signal triggered_1_fu_449_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal triggered_1_reg_1396 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln417_fu_455_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln417_reg_1403 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln417_1_fu_461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln417_1_reg_1409 : STD_LOGIC_VECTOR (0 downto 0);
    signal curr_byte_3_reg_1415 : STD_LOGIC_VECTOR (6 downto 0);
    signal encoded_message_6_reg_1424 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_17_reg_1434 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_18_reg_1439 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln458_fu_529_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal zext_ln479_1_fu_554_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal add_ln490_fu_563_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln415_fu_584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_reg_1459 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln417_fu_589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln417_reg_1464 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln417_1_fu_593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln417_1_reg_1469 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln417_2_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln417_2_reg_1474 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln417_2_fu_647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln417_2_reg_1479 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln417_3_fu_653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln417_3_reg_1484 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln417_4_fu_659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln417_4_reg_1489 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln415_1_fu_665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln415_1_reg_1494 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln417_3_fu_671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln417_3_reg_1499 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln417_4_fu_677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln417_4_reg_1504 : STD_LOGIC_VECTOR (0 downto 0);
    signal message_offset_3_fu_695_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal message_offset_3_reg_1509 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln415_fu_728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln415_reg_1518 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_packet_data_fu_1265_p6 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_predicate_pred145_state6 : BOOLEAN;
    signal second_packet_data_fu_1279_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_338_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_348_p4 : STD_LOGIC_VECTOR (47 downto 0);
    signal trunc_ln377_fu_334_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal message_offset_fu_387_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln417_2_fu_411_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal triggered_fu_427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln_fu_517_p3 : STD_LOGIC_VECTOR (64 downto 0);
    signal sext_ln458_fu_525_p1 : STD_LOGIC_VECTOR (71 downto 0);
    signal zext_ln479_fu_538_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln1_fu_542_p3 : STD_LOGIC_VECTOR (64 downto 0);
    signal sext_ln479_fu_550_p1 : STD_LOGIC_VECTOR (72 downto 0);
    signal xor_ln415_fu_579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal message_offset_2_fu_607_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal message_offset_2_fu_607_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal message_offset_2_fu_607_p10 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln415_2_fu_631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal message_offset_2_fu_607_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal triggered_2_fu_636_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal message_offset_3_fu_695_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal message_offset_3_fu_695_p12 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln415_3_fu_723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln2_fu_734_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln411_fu_755_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln400_1_fu_748_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln417_fu_758_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln417_1_fu_765_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_16_fu_778_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln417_fu_792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln417_1_fu_796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_771_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln411_1_fu_789_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln406_1_fu_785_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln417_3_fu_834_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln417_2_fu_830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln417_4_fu_838_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_17_fu_801_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln411_2_fu_821_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_18_fu_809_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_19_fu_815_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln417_5_fu_867_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln417_5_fu_872_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_20_fu_824_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln417_6_fu_884_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln417_6_fu_889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln415_2_fu_911_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln417_7_fu_901_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln417_8_fu_906_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln417_6_fu_922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln417_7_fu_928_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln417_5_fu_916_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln417_8_fu_934_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_21_fu_844_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln391_fu_864_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln417_7_fu_948_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_22_fu_852_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal and_ln417_8_fu_960_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_23_fu_858_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal message_offset_4_fu_986_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal message_offset_4_fu_986_p14 : STD_LOGIC_VECTOR (4 downto 0);
    signal message_offset_4_fu_986_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_28_fu_965_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_27_fu_953_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_25_fu_894_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_24_fu_877_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln427_fu_1044_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal encoded_message_fu_1037_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln399_1_fu_1021_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal encoded_message_4_fu_1047_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln399_fu_1017_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln399_2_fu_1025_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln399_3_fu_1029_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln399_4_fu_1033_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln425_fu_1195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln425_1_fu_1209_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln425_2_fu_1215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln425_4_fu_1227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln425_1_fu_1239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln425_3_fu_1221_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln425_2_fu_1245_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln425_fu_1233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln425_3_fu_1251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_26_fu_940_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_1055_p13 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_1083_p13 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_30_fu_1257_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln400_fu_741_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_29_fu_1201_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_1111_p13 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_1139_p13 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_1167_p13 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_iter0_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_NS_iter1_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ST_iter0_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_iter1_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_iter1_fsm_state6_blk : STD_LOGIC;
    signal regslice_both_metadata_from_book_U_apdone_blk : STD_LOGIC;
    signal metadata_from_book_TDATA_int_regslice : STD_LOGIC_VECTOR (127 downto 0);
    signal metadata_from_book_TVALID_int_regslice : STD_LOGIC;
    signal metadata_from_book_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_metadata_from_book_U_ack_in : STD_LOGIC;
    signal lbTxDataOut_TDATA_int_regslice : STD_LOGIC_VECTOR (127 downto 0);
    signal lbTxDataOut_TVALID_int_regslice : STD_LOGIC;
    signal lbTxDataOut_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_lbTxDataOut_U_vld_out : STD_LOGIC;
    signal lbTxMetadataOut_TDATA_int_regslice : STD_LOGIC_VECTOR (95 downto 0);
    signal lbTxMetadataOut_TVALID_int_regslice : STD_LOGIC;
    signal lbTxMetadataOut_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_lbTxMetadataOut_U_vld_out : STD_LOGIC;
    signal lbTxLengthOut_TDATA_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal lbTxLengthOut_TVALID_int_regslice : STD_LOGIC;
    signal lbTxLengthOut_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_lbTxLengthOut_U_vld_out : STD_LOGIC;
    signal regslice_both_time_from_book_U_apdone_blk : STD_LOGIC;
    signal time_from_book_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal time_from_book_TVALID_int_regslice : STD_LOGIC;
    signal time_from_book_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_time_from_book_U_ack_in : STD_LOGIC;
    signal tagsOut_TVALID_int_regslice : STD_LOGIC;
    signal tagsOut_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_tagsOut_U_vld_out : STD_LOGIC;
    signal regslice_both_order_from_book_U_apdone_blk : STD_LOGIC;
    signal order_from_book_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal order_from_book_TVALID_int_regslice : STD_LOGIC;
    signal order_from_book_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_order_from_book_U_ack_in : STD_LOGIC;
    signal ap_condition_355 : BOOLEAN;
    signal message_offset_2_fu_607_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal message_offset_2_fu_607_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal message_offset_2_fu_607_p5 : STD_LOGIC_VECTOR (2 downto 0);
    signal message_offset_2_fu_607_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal message_offset_3_fu_695_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal message_offset_3_fu_695_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal message_offset_3_fu_695_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal message_offset_3_fu_695_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal message_offset_3_fu_695_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal message_offset_4_fu_986_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal message_offset_4_fu_986_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal message_offset_4_fu_986_p5 : STD_LOGIC_VECTOR (4 downto 0);
    signal message_offset_4_fu_986_p7 : STD_LOGIC_VECTOR (4 downto 0);
    signal message_offset_4_fu_986_p9 : STD_LOGIC_VECTOR (4 downto 0);
    signal message_offset_4_fu_986_p11 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_11_fu_1055_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_1055_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_1055_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_1055_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_1055_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_1083_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_1083_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_1083_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_1083_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_1083_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1111_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1111_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1111_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1111_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1111_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_1139_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_1139_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_1139_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_1139_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_1139_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_1167_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_1167_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_1167_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_1167_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_1167_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component fast_protocol_sparsemux_9_3_4_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (2 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (2 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (2 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (2 downto 0);
        din3_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (3 downto 0);
        din3 : IN STD_LOGIC_VECTOR (3 downto 0);
        def : IN STD_LOGIC_VECTOR (3 downto 0);
        sel : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component fast_protocol_sparsemux_11_4_4_1_1_x IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (3 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (3 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (3 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (3 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (3 downto 0);
        din4_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (3 downto 0);
        din3 : IN STD_LOGIC_VECTOR (3 downto 0);
        din4 : IN STD_LOGIC_VECTOR (3 downto 0);
        def : IN STD_LOGIC_VECTOR (3 downto 0);
        sel : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component fast_protocol_sparsemux_13_5_4_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (4 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (4 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (4 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (4 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (4 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (4 downto 0);
        din5_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (3 downto 0);
        din3 : IN STD_LOGIC_VECTOR (3 downto 0);
        din4 : IN STD_LOGIC_VECTOR (3 downto 0);
        din5 : IN STD_LOGIC_VECTOR (3 downto 0);
        def : IN STD_LOGIC_VECTOR (3 downto 0);
        sel : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component fast_protocol_sparsemux_11_32_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (31 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (31 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (31 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (31 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (31 downto 0);
        din4_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        def : IN STD_LOGIC_VECTOR (7 downto 0);
        sel : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component fast_protocol_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    sparsemux_9_3_4_1_1_U51 : component fast_protocol_sparsemux_9_3_4_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "100",
        din0_WIDTH => 4,
        CASE1 => "010",
        din1_WIDTH => 4,
        CASE2 => "001",
        din2_WIDTH => 4,
        CASE3 => "000",
        din3_WIDTH => 4,
        def_WIDTH => 4,
        sel_WIDTH => 3,
        dout_WIDTH => 4)
    port map (
        din0 => message_offset_2_fu_607_p2,
        din1 => ap_const_lv4_8,
        din2 => ap_const_lv4_7,
        din3 => ap_const_lv4_6,
        def => message_offset_2_fu_607_p9,
        sel => message_offset_2_fu_607_p10,
        dout => message_offset_2_fu_607_p11);

    sparsemux_11_4_4_1_1_x_U52 : component fast_protocol_sparsemux_11_4_4_1_1_x
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "1000",
        din0_WIDTH => 4,
        CASE1 => "0100",
        din1_WIDTH => 4,
        CASE2 => "0010",
        din2_WIDTH => 4,
        CASE3 => "0001",
        din3_WIDTH => 4,
        CASE4 => "0000",
        din4_WIDTH => 4,
        def_WIDTH => 4,
        sel_WIDTH => 4,
        dout_WIDTH => 4)
    port map (
        din0 => message_offset_2_fu_607_p11,
        din1 => ap_const_lv4_9,
        din2 => ap_const_lv4_8,
        din3 => ap_const_lv4_7,
        din4 => ap_const_lv4_6,
        def => message_offset_3_fu_695_p11,
        sel => message_offset_3_fu_695_p12,
        dout => message_offset_3_fu_695_p13);

    sparsemux_13_5_4_1_1_U53 : component fast_protocol_sparsemux_13_5_4_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10000",
        din0_WIDTH => 4,
        CASE1 => "01000",
        din1_WIDTH => 4,
        CASE2 => "00100",
        din2_WIDTH => 4,
        CASE3 => "00010",
        din3_WIDTH => 4,
        CASE4 => "00001",
        din4_WIDTH => 4,
        CASE5 => "00000",
        din5_WIDTH => 4,
        def_WIDTH => 4,
        sel_WIDTH => 5,
        dout_WIDTH => 4)
    port map (
        din0 => message_offset_3_reg_1509,
        din1 => ap_const_lv4_A,
        din2 => ap_const_lv4_9,
        din3 => ap_const_lv4_8,
        din4 => ap_const_lv4_7,
        din5 => ap_const_lv4_6,
        def => message_offset_4_fu_986_p13,
        sel => message_offset_4_fu_986_p14,
        dout => message_offset_4_fu_986_p15);

    sparsemux_11_32_8_1_1_U54 : component fast_protocol_sparsemux_11_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00000000000000000000000000000111",
        din0_WIDTH => 8,
        CASE1 => "00000000000000000000000000001000",
        din1_WIDTH => 8,
        CASE2 => "00000000000000000000000000001001",
        din2_WIDTH => 8,
        CASE3 => "00000000000000000000000000001010",
        din3_WIDTH => 8,
        CASE4 => "00000000000000000000000000000110",
        din4_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 32,
        dout_WIDTH => 8)
    port map (
        din0 => encoded_message_fu_1037_p3,
        din1 => zext_ln399_1_fu_1021_p1,
        din2 => zext_ln399_1_fu_1021_p1,
        din3 => zext_ln399_1_fu_1021_p1,
        din4 => encoded_message_4_fu_1047_p3,
        def => zext_ln399_1_fu_1021_p1,
        sel => zext_ln399_fu_1017_p1,
        dout => tmp_11_fu_1055_p13);

    sparsemux_11_32_8_1_1_U55 : component fast_protocol_sparsemux_11_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00000000000000000000000000000111",
        din0_WIDTH => 8,
        CASE1 => "00000000000000000000000000001000",
        din1_WIDTH => 8,
        CASE2 => "00000000000000000000000000001001",
        din2_WIDTH => 8,
        CASE3 => "00000000000000000000000000001010",
        din3_WIDTH => 8,
        CASE4 => "00000000000000000000000000000110",
        din4_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 32,
        dout_WIDTH => 8)
    port map (
        din0 => zext_ln399_2_fu_1025_p1,
        din1 => zext_ln399_2_fu_1025_p1,
        din2 => zext_ln399_2_fu_1025_p1,
        din3 => zext_ln399_2_fu_1025_p1,
        din4 => encoded_message_fu_1037_p3,
        def => encoded_message_4_fu_1047_p3,
        sel => zext_ln399_fu_1017_p1,
        dout => tmp_12_fu_1083_p13);

    sparsemux_11_32_8_1_1_U56 : component fast_protocol_sparsemux_11_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00000000000000000000000000000111",
        din0_WIDTH => 8,
        CASE1 => "00000000000000000000000000001000",
        din1_WIDTH => 8,
        CASE2 => "00000000000000000000000000001001",
        din2_WIDTH => 8,
        CASE3 => "00000000000000000000000000001010",
        din3_WIDTH => 8,
        CASE4 => "00000000000000000000000000000110",
        din4_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 32,
        dout_WIDTH => 8)
    port map (
        din0 => ap_const_lv8_0,
        din1 => ap_const_lv8_0,
        din2 => encoded_message_4_fu_1047_p3,
        din3 => encoded_message_fu_1037_p3,
        din4 => ap_const_lv8_0,
        def => ap_const_lv8_0,
        sel => zext_ln399_fu_1017_p1,
        dout => tmp_13_fu_1111_p13);

    sparsemux_11_32_8_1_1_U57 : component fast_protocol_sparsemux_11_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00000000000000000000000000000111",
        din0_WIDTH => 8,
        CASE1 => "00000000000000000000000000001000",
        din1_WIDTH => 8,
        CASE2 => "00000000000000000000000000001001",
        din2_WIDTH => 8,
        CASE3 => "00000000000000000000000000001010",
        din3_WIDTH => 8,
        CASE4 => "00000000000000000000000000000110",
        din4_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 32,
        dout_WIDTH => 8)
    port map (
        din0 => zext_ln399_3_fu_1029_p1,
        din1 => encoded_message_4_fu_1047_p3,
        din2 => encoded_message_fu_1037_p3,
        din3 => zext_ln399_3_fu_1029_p1,
        din4 => zext_ln399_3_fu_1029_p1,
        def => zext_ln399_3_fu_1029_p1,
        sel => zext_ln399_fu_1017_p1,
        dout => tmp_14_fu_1139_p13);

    sparsemux_11_32_8_1_1_U58 : component fast_protocol_sparsemux_11_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00000000000000000000000000000111",
        din0_WIDTH => 8,
        CASE1 => "00000000000000000000000000001000",
        din1_WIDTH => 8,
        CASE2 => "00000000000000000000000000001001",
        din2_WIDTH => 8,
        CASE3 => "00000000000000000000000000001010",
        din3_WIDTH => 8,
        CASE4 => "00000000000000000000000000000110",
        din4_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 32,
        dout_WIDTH => 8)
    port map (
        din0 => encoded_message_4_fu_1047_p3,
        din1 => encoded_message_fu_1037_p3,
        din2 => zext_ln399_4_fu_1033_p1,
        din3 => zext_ln399_4_fu_1033_p1,
        din4 => zext_ln399_4_fu_1033_p1,
        def => zext_ln399_4_fu_1033_p1,
        sel => zext_ln399_fu_1017_p1,
        dout => tmp_15_fu_1167_p13);

    regslice_both_metadata_from_book_U : component fast_protocol_regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => metadata_from_book_TDATA,
        vld_in => metadata_from_book_TVALID,
        ack_in => regslice_both_metadata_from_book_U_ack_in,
        data_out => metadata_from_book_TDATA_int_regslice,
        vld_out => metadata_from_book_TVALID_int_regslice,
        ack_out => metadata_from_book_TREADY_int_regslice,
        apdone_blk => regslice_both_metadata_from_book_U_apdone_blk);

    regslice_both_lbTxDataOut_U : component fast_protocol_regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => lbTxDataOut_TDATA_int_regslice,
        vld_in => lbTxDataOut_TVALID_int_regslice,
        ack_in => lbTxDataOut_TREADY_int_regslice,
        data_out => lbTxDataOut_TDATA,
        vld_out => regslice_both_lbTxDataOut_U_vld_out,
        ack_out => lbTxDataOut_TREADY,
        apdone_blk => regslice_both_lbTxDataOut_U_apdone_blk);

    regslice_both_lbTxMetadataOut_U : component fast_protocol_regslice_both
    generic map (
        DataWidth => 96)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => lbTxMetadataOut_TDATA_int_regslice,
        vld_in => lbTxMetadataOut_TVALID_int_regslice,
        ack_in => lbTxMetadataOut_TREADY_int_regslice,
        data_out => lbTxMetadataOut_TDATA,
        vld_out => regslice_both_lbTxMetadataOut_U_vld_out,
        ack_out => lbTxMetadataOut_TREADY,
        apdone_blk => regslice_both_lbTxMetadataOut_U_apdone_blk);

    regslice_both_lbTxLengthOut_U : component fast_protocol_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => lbTxLengthOut_TDATA_int_regslice,
        vld_in => lbTxLengthOut_TVALID_int_regslice,
        ack_in => lbTxLengthOut_TREADY_int_regslice,
        data_out => lbTxLengthOut_TDATA,
        vld_out => regslice_both_lbTxLengthOut_U_vld_out,
        ack_out => lbTxLengthOut_TREADY,
        apdone_blk => regslice_both_lbTxLengthOut_U_apdone_blk);

    regslice_both_time_from_book_U : component fast_protocol_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => time_from_book_TDATA,
        vld_in => time_from_book_TVALID,
        ack_in => regslice_both_time_from_book_U_ack_in,
        data_out => time_from_book_TDATA_int_regslice,
        vld_out => time_from_book_TVALID_int_regslice,
        ack_out => time_from_book_TREADY_int_regslice,
        apdone_blk => regslice_both_time_from_book_U_apdone_blk);

    regslice_both_tagsOut_U : component fast_protocol_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => time_from_book_read_reg_1343,
        vld_in => tagsOut_TVALID_int_regslice,
        ack_in => tagsOut_TREADY_int_regslice,
        data_out => tagsOut_TDATA,
        vld_out => regslice_both_tagsOut_U_vld_out,
        ack_out => tagsOut_TREADY,
        apdone_blk => regslice_both_tagsOut_U_apdone_blk);

    regslice_both_order_from_book_U : component fast_protocol_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => order_from_book_TDATA,
        vld_in => order_from_book_TVALID,
        ack_in => regslice_both_order_from_book_U_ack_in,
        data_out => order_from_book_TDATA_int_regslice,
        vld_out => order_from_book_TVALID_int_regslice,
        ack_out => order_from_book_TREADY_int_regslice,
        apdone_blk => regslice_both_order_from_book_U_apdone_blk);





    ap_CS_iter0_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
            else
                ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
            end if;
        end if;
    end process;


    ap_CS_iter1_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
            else
                ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((ap_const_boolean_1 = ap_block_state6_pp0_stage1_iter1) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state6))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    lbPacketLength_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state6) and (ap_const_boolean_1 = ap_block_state6_pp0_stage1_iter1)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state5) and (ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter1)))) and (next_state_load_reg_1303 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3) and (grp_nbwritereq_fu_242_p3 = ap_const_lv1_1))) then 
                lbPacketLength <= ap_const_lv16_8;
            elsif ((not(((ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter1) or (ap_done_reg = ap_const_logic_1))) and (next_state_load_reg_1303_pp0_iter0_reg = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_iter1_fsm_state5) and (tmp_4_reg_1335 = ap_const_lv1_1) and (tmp_2_reg_1327_pp0_iter0_reg = ap_const_lv1_1))) then 
                lbPacketLength <= add_ln490_fu_563_p2;
            end if; 
        end if;
    end process;

    next_state_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state6) and (ap_const_boolean_1 = ap_block_state6_pp0_stage1_iter1)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state5) and (ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter1)))) and (next_state_load_reg_1303 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3) and (grp_nbwritereq_fu_242_p3 = ap_const_lv1_1))) then 
                next_state <= ap_const_lv2_2;
            elsif ((not((next_state_load_reg_1303 = ap_const_lv2_1)) and not((next_state_load_reg_1303 = ap_const_lv2_2)) and not(((ap_const_boolean_1 = ap_block_state4_pp0_stage3_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state6) and (ap_const_boolean_1 = ap_block_state6_pp0_stage1_iter1)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state5) and (ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter1)))) and (grp_nbwritereq_fu_258_p3 = ap_const_lv1_1) and (tmp_7_reg_1331 = ap_const_lv1_1) and (tmp_6_reg_1319 = ap_const_lv1_1) and (tmp_5_reg_1315 = ap_const_lv1_1) and (tmp_3_reg_1311 = ap_const_lv1_1) and (tmp_reg_1307 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4))) then 
                next_state <= ap_const_lv2_1;
            elsif ((not(((ap_const_boolean_1 = ap_block_state4_pp0_stage3_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state6) and (ap_const_boolean_1 = ap_block_state6_pp0_stage1_iter1)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state5) and (ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter1)))) and (next_state_load_reg_1303 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4) and (grp_nbwritereq_fu_250_p3 = ap_const_lv1_1) and (tmp_2_reg_1327 = ap_const_lv1_1))) then 
                next_state <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter1) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state5))) then
                and_ln415_reg_1459 <= and_ln415_fu_584_p2;
                and_ln417_1_reg_1469 <= and_ln417_1_fu_593_p2;
                and_ln417_2_reg_1479 <= and_ln417_2_fu_647_p2;
                and_ln417_3_reg_1499 <= and_ln417_3_fu_671_p2;
                and_ln417_4_reg_1504 <= and_ln417_4_fu_677_p2;
                and_ln417_reg_1464 <= and_ln417_fu_589_p2;
                    ap_predicate_pred145_state6 <= (not((next_state_load_reg_1303_pp0_iter0_reg = ap_const_lv2_1)) and not((next_state_load_reg_1303_pp0_iter0_reg = ap_const_lv2_2)) and (tmp_8_reg_1339 = ap_const_lv1_1) and (tmp_7_reg_1331_pp0_iter0_reg = ap_const_lv1_1) and (tmp_6_reg_1319_pp0_iter0_reg = ap_const_lv1_1) and (tmp_5_reg_1315_pp0_iter0_reg = ap_const_lv1_1) and (tmp_3_reg_1311_pp0_iter0_reg = ap_const_lv1_1) and (tmp_reg_1307_pp0_iter0_reg = ap_const_lv1_1));
                icmp_ln417_2_reg_1474 <= icmp_ln417_2_fu_641_p2;
                icmp_ln417_3_reg_1484 <= icmp_ln417_3_fu_653_p2;
                icmp_ln417_4_reg_1489 <= icmp_ln417_4_fu_659_p2;
                message_offset_3_reg_1509 <= message_offset_3_fu_695_p13;
                or_ln415_reg_1518 <= or_ln415_fu_728_p2;
                xor_ln415_1_reg_1494 <= xor_ln415_1_fu_665_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state4_pp0_stage3_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state6) and (ap_const_boolean_1 = ap_block_state6_pp0_stage1_iter1)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state5) and (ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4))) then
                curr_byte_1_reg_1366 <= order_from_book_TDATA_int_regslice(55 downto 52);
                curr_byte_2_reg_1384 <= order_from_book_TDATA_int_regslice(51 downto 45);
                curr_byte_3_reg_1415 <= order_from_book_TDATA_int_regslice(44 downto 38);
                encoded_message_6_reg_1424 <= order_from_book_TDATA_int_regslice(37 downto 31);
                icmp_ln415_1_reg_1391 <= icmp_ln415_1_fu_443_p2;
                icmp_ln415_reg_1372 <= icmp_ln415_fu_405_p2;
                icmp_ln417_1_reg_1409 <= icmp_ln417_1_fu_461_p2;
                icmp_ln417_reg_1403 <= icmp_ln417_fu_455_p2;
                    message_offset_1_reg_1379(1 downto 0) <= message_offset_1_fu_419_p3(1 downto 0);
                next_state_load_reg_1303_pp0_iter0_reg <= next_state_load_reg_1303;
                time_from_book_read_reg_1343 <= time_from_book_TDATA_int_regslice;
                tmp_10_reg_1353 <= order_from_book_TDATA_int_regslice(23 downto 23);
                tmp_16_reg_1361 <= order_from_book_TDATA_int_regslice(22 downto 16);
                tmp_17_reg_1434 <= order_from_book_TDATA_int_regslice(30 downto 24);
                tmp_18_reg_1439 <= order_from_book_TDATA_int_regslice(58 downto 56);
                tmp_1_reg_1323_pp0_iter0_reg <= tmp_1_reg_1323;
                tmp_2_reg_1327_pp0_iter0_reg <= tmp_2_reg_1327;
                tmp_3_reg_1311_pp0_iter0_reg <= tmp_3_reg_1311;
                tmp_4_reg_1335 <= (0=>lbTxLengthOut_TREADY_int_regslice, others=>'-');
                tmp_5_reg_1315_pp0_iter0_reg <= tmp_5_reg_1315;
                tmp_6_reg_1319_pp0_iter0_reg <= tmp_6_reg_1319;
                tmp_7_reg_1331_pp0_iter0_reg <= tmp_7_reg_1331;
                tmp_8_reg_1339 <= (0=>tagsOut_TREADY_int_regslice, others=>'-');
                tmp_reg_1307_pp0_iter0_reg <= tmp_reg_1307;
                triggered_1_reg_1396 <= triggered_1_fu_449_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state6_pp0_stage1_iter1) or (ap_done_reg = ap_const_logic_1))) and (ap_predicate_pred145_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter1_fsm_state6))) then
                    first_packet_data(8 downto 2) <= first_packet_data_fu_1265_p6(8 downto 2);    first_packet_data(15) <= first_packet_data_fu_1265_p6(15);    first_packet_data(24 downto 23) <= first_packet_data_fu_1265_p6(24 downto 23);    first_packet_data(63 downto 31) <= first_packet_data_fu_1265_p6(63 downto 31);
                    second_packet_data(26 downto 0) <= second_packet_data_fu_1279_p5(26 downto 0);    second_packet_data(31) <= second_packet_data_fu_1279_p5(31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state6) and (ap_const_boolean_1 = ap_block_state6_pp0_stage1_iter1)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state5) and (ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                next_state_load_reg_1303 <= next_state;
                tmp_3_reg_1311 <= tmp_3_nbreadreq_fu_218_p3;
                tmp_5_reg_1315 <= tmp_5_nbreadreq_fu_226_p3;
                tmp_reg_1307 <= tmp_nbreadreq_fu_210_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state6) and (ap_const_boolean_1 = ap_block_state6_pp0_stage1_iter1)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state5) and (ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3))) then
                tmp_1_reg_1323 <= (0=>lbTxDataOut_TREADY_int_regslice, others=>'-');
                tmp_2_reg_1327 <= (0=>lbTxDataOut_TREADY_int_regslice, others=>'-');
                tmp_7_reg_1331 <= (0=>lbTxLengthOut_TREADY_int_regslice, others=>'-');
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state6) and (ap_const_boolean_1 = ap_block_state6_pp0_stage1_iter1)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state5) and (ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then
                tmp_6_reg_1319 <= (0=>lbTxMetadataOut_TREADY_int_regslice, others=>'-');
            end if;
        end if;
    end process;
    first_packet_data(1 downto 0) <= "00";
    first_packet_data(14 downto 9) <= "000000";
    first_packet_data(22 downto 16) <= "0000000";
    first_packet_data(30 downto 25) <= "000000";
    second_packet_data(30 downto 27) <= "0000";
    message_offset_1_reg_1379(2) <= '1';

    ap_NS_iter0_fsm_assign_proc : process (ap_CS_iter0_fsm, ap_CS_iter0_fsm_state1, ap_block_state4_pp0_stage3_iter0, ap_block_state5_pp0_stage0_iter1, ap_CS_iter1_fsm_state5, ap_block_state6_pp0_stage1_iter1, ap_CS_iter1_fsm_state6, ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_CS_iter0_fsm_state2, ap_CS_iter0_fsm_state3)
    begin
        case ap_CS_iter0_fsm is
            when ap_ST_iter0_fsm_state1 => 
                if ((not(((ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state6) and (ap_const_boolean_1 = ap_block_state6_pp0_stage1_iter1)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state5) and (ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state2;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state1;
                end if;
            when ap_ST_iter0_fsm_state2 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state6) and (ap_const_boolean_1 = ap_block_state6_pp0_stage1_iter1)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state5) and (ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state3;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state2;
                end if;
            when ap_ST_iter0_fsm_state3 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state6) and (ap_const_boolean_1 = ap_block_state6_pp0_stage1_iter1)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state5) and (ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state4;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state3;
                end if;
            when ap_ST_iter0_fsm_state4 => 
                if (not(((ap_const_boolean_1 = ap_block_state4_pp0_stage3_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state6) and (ap_const_boolean_1 = ap_block_state6_pp0_stage1_iter1)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state5) and (ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter1))))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state1;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state4;
                end if;
            when others =>  
                ap_NS_iter0_fsm <= "XXXX";
        end case;
    end process;

    ap_NS_iter1_fsm_assign_proc : process (ap_CS_iter1_fsm, ap_CS_iter0_fsm_state4, ap_block_state4_pp0_stage3_iter0, ap_block_state5_pp0_stage0_iter1, ap_CS_iter1_fsm_state5, ap_block_state6_pp0_stage1_iter1, ap_CS_iter1_fsm_state6, ap_done_reg)
    begin
        case ap_CS_iter1_fsm is
            when ap_ST_iter1_fsm_state5 => 
                if ((not(((ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter1) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state5))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state6;
                else
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state5;
                end if;
            when ap_ST_iter1_fsm_state6 => 
                if ((not(((ap_const_boolean_1 = ap_block_state6_pp0_stage1_iter1) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_pp0_stage3_iter0))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state5;
                elsif ((not(((ap_const_boolean_1 = ap_block_state6_pp0_stage1_iter1) or (ap_done_reg = ap_const_logic_1))) and ((ap_const_logic_0 = ap_CS_iter0_fsm_state4) or ((ap_const_logic_1 = ap_CS_iter0_fsm_state4) and (ap_const_boolean_1 = ap_block_state4_pp0_stage3_iter0))))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state0;
                else
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state6;
                end if;
            when ap_ST_iter1_fsm_state0 => 
                if ((not(((ap_const_boolean_1 = ap_block_state4_pp0_stage3_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state6) and (ap_const_boolean_1 = ap_block_state6_pp0_stage1_iter1)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state5) and (ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state5;
                else
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state0;
                end if;
            when others =>  
                ap_NS_iter1_fsm <= "XXX";
        end case;
    end process;
    add_ln490_fu_563_p2 <= std_logic_vector(unsigned(lbPacketLength) + unsigned(ap_const_lv16_8));
    and_ln415_fu_584_p2 <= (xor_ln415_fu_579_p2 and icmp_ln415_reg_1372);
    and_ln417_1_fu_593_p2 <= (triggered_1_reg_1396 and icmp_ln417_reg_1403);
    and_ln417_2_fu_647_p2 <= (triggered_2_fu_636_p2 and icmp_ln417_2_fu_641_p2);
    and_ln417_3_fu_671_p2 <= (triggered_2_fu_636_p2 and icmp_ln417_4_fu_659_p2);
    and_ln417_4_fu_677_p2 <= (triggered_2_fu_636_p2 and icmp_ln417_3_fu_653_p2);
    and_ln417_5_fu_872_p2 <= (or_ln415_reg_1518 and icmp_ln417_5_fu_867_p2);
    and_ln417_6_fu_889_p2 <= (or_ln415_reg_1518 and icmp_ln417_6_fu_884_p2);
    and_ln417_7_fu_948_p2 <= (or_ln415_reg_1518 and icmp_ln417_8_fu_906_p2);
    and_ln417_8_fu_960_p2 <= (or_ln415_reg_1518 and icmp_ln417_7_fu_901_p2);
    and_ln417_fu_589_p2 <= (triggered_1_reg_1396 and icmp_ln417_1_reg_1409);
    ap_CS_iter0_fsm_state1 <= ap_CS_iter0_fsm(0);
    ap_CS_iter0_fsm_state2 <= ap_CS_iter0_fsm(1);
    ap_CS_iter0_fsm_state3 <= ap_CS_iter0_fsm(2);
    ap_CS_iter0_fsm_state4 <= ap_CS_iter0_fsm(3);
    ap_CS_iter1_fsm_state0 <= ap_CS_iter1_fsm(0);
    ap_CS_iter1_fsm_state5 <= ap_CS_iter1_fsm(1);
    ap_CS_iter1_fsm_state6 <= ap_CS_iter1_fsm(2);

    ap_ST_iter0_fsm_state1_blk_assign_proc : process(ap_block_state1_pp0_stage0_iter0)
    begin
        if ((ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)) then 
            ap_ST_iter0_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_iter0_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_iter0_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_iter0_fsm_state4_blk_assign_proc : process(ap_block_state4_pp0_stage3_iter0)
    begin
        if ((ap_const_boolean_1 = ap_block_state4_pp0_stage3_iter0)) then 
            ap_ST_iter0_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_iter0_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_iter1_fsm_state5_blk_assign_proc : process(ap_block_state5_pp0_stage0_iter1)
    begin
        if ((ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter1)) then 
            ap_ST_iter1_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_iter1_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_iter1_fsm_state6_blk_assign_proc : process(ap_block_state6_pp0_stage1_iter1)
    begin
        if ((ap_const_boolean_1 = ap_block_state6_pp0_stage1_iter1)) then 
            ap_ST_iter1_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_iter1_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state4_pp0_stage3_iter0_assign_proc : process(ap_predicate_op44_read_state4, ap_predicate_op45_read_state4, ap_predicate_op50_write_state4, ap_predicate_op51_read_state4, metadata_from_book_TVALID_int_regslice, lbTxMetadataOut_TREADY_int_regslice, time_from_book_TVALID_int_regslice, order_from_book_TVALID_int_regslice)
    begin
                ap_block_state4_pp0_stage3_iter0 <= (((ap_predicate_op51_read_state4 = ap_const_boolean_1) and (order_from_book_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op50_write_state4 = ap_const_boolean_1) and (lbTxMetadataOut_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op45_read_state4 = ap_const_boolean_1) and (metadata_from_book_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op44_read_state4 = ap_const_boolean_1) and (time_from_book_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state5_pp0_stage0_iter1_assign_proc : process(ap_predicate_op74_write_state5, ap_predicate_op80_write_state5, ap_predicate_op84_write_state5, ap_predicate_op85_write_state5, ap_predicate_op86_write_state5, lbTxDataOut_TREADY_int_regslice, lbTxMetadataOut_TREADY_int_regslice, lbTxLengthOut_TREADY_int_regslice, tagsOut_TREADY_int_regslice)
    begin
                ap_block_state5_pp0_stage0_iter1 <= (((ap_predicate_op86_write_state5 = ap_const_boolean_1) and (lbTxMetadataOut_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op85_write_state5 = ap_const_boolean_1) and (tagsOut_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op84_write_state5 = ap_const_boolean_1) and (lbTxLengthOut_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op80_write_state5 = ap_const_boolean_1) and (lbTxDataOut_TREADY_int_regslice = ap_const_logic_0)) or ((lbTxDataOut_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op74_write_state5 = ap_const_boolean_1)));
    end process;


    ap_block_state6_pp0_stage1_iter1_assign_proc : process(ap_predicate_op107_write_state6, ap_predicate_op110_write_state6, ap_predicate_op111_write_state6, ap_predicate_op114_write_state6, regslice_both_lbTxDataOut_U_apdone_blk, regslice_both_lbTxMetadataOut_U_apdone_blk, regslice_both_lbTxLengthOut_U_apdone_blk, regslice_both_tagsOut_U_apdone_blk, lbTxDataOut_TREADY_int_regslice, lbTxLengthOut_TREADY_int_regslice, tagsOut_TREADY_int_regslice)
    begin
                ap_block_state6_pp0_stage1_iter1 <= ((regslice_both_tagsOut_U_apdone_blk = ap_const_logic_1) or (regslice_both_lbTxLengthOut_U_apdone_blk = ap_const_logic_1) or (regslice_both_lbTxMetadataOut_U_apdone_blk = ap_const_logic_1) or (regslice_both_lbTxDataOut_U_apdone_blk = ap_const_logic_1) or ((ap_predicate_op114_write_state6 = ap_const_boolean_1) and (tagsOut_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op111_write_state6 = ap_const_boolean_1) and (lbTxLengthOut_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op110_write_state6 = ap_const_boolean_1) and (lbTxDataOut_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op107_write_state6 = ap_const_boolean_1) and (lbTxDataOut_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_condition_355_assign_proc : process(ap_block_state5_pp0_stage0_iter1, ap_CS_iter1_fsm_state5, ap_done_reg)
    begin
                ap_condition_355 <= (not(((ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter1) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state5));
    end process;


    ap_done_assign_proc : process(ap_block_state6_pp0_stage1_iter1, ap_CS_iter1_fsm_state6, ap_done_reg)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state6_pp0_stage1_iter1) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state6))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state0)
    begin
        if (((ap_const_logic_1 = ap_CS_iter1_fsm_state0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op107_write_state6_assign_proc : process(next_state_load_reg_1303_pp0_iter0_reg, tmp_1_reg_1323_pp0_iter0_reg)
    begin
                ap_predicate_op107_write_state6 <= ((tmp_1_reg_1323_pp0_iter0_reg = ap_const_lv1_1) and (next_state_load_reg_1303_pp0_iter0_reg = ap_const_lv2_1));
    end process;


    ap_predicate_op110_write_state6_assign_proc : process(next_state_load_reg_1303_pp0_iter0_reg, tmp_2_reg_1327_pp0_iter0_reg, tmp_4_reg_1335)
    begin
                ap_predicate_op110_write_state6 <= ((next_state_load_reg_1303_pp0_iter0_reg = ap_const_lv2_2) and (tmp_4_reg_1335 = ap_const_lv1_1) and (tmp_2_reg_1327_pp0_iter0_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op111_write_state6_assign_proc : process(next_state_load_reg_1303_pp0_iter0_reg, tmp_2_reg_1327_pp0_iter0_reg, tmp_4_reg_1335)
    begin
                ap_predicate_op111_write_state6 <= ((next_state_load_reg_1303_pp0_iter0_reg = ap_const_lv2_2) and (tmp_4_reg_1335 = ap_const_lv1_1) and (tmp_2_reg_1327_pp0_iter0_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op114_write_state6_assign_proc : process(next_state_load_reg_1303_pp0_iter0_reg, tmp_reg_1307_pp0_iter0_reg, tmp_3_reg_1311_pp0_iter0_reg, tmp_5_reg_1315_pp0_iter0_reg, tmp_6_reg_1319_pp0_iter0_reg, tmp_7_reg_1331_pp0_iter0_reg, tmp_8_reg_1339)
    begin
                ap_predicate_op114_write_state6 <= (not((next_state_load_reg_1303_pp0_iter0_reg = ap_const_lv2_1)) and not((next_state_load_reg_1303_pp0_iter0_reg = ap_const_lv2_2)) and (tmp_8_reg_1339 = ap_const_lv1_1) and (tmp_7_reg_1331_pp0_iter0_reg = ap_const_lv1_1) and (tmp_6_reg_1319_pp0_iter0_reg = ap_const_lv1_1) and (tmp_5_reg_1315_pp0_iter0_reg = ap_const_lv1_1) and (tmp_3_reg_1311_pp0_iter0_reg = ap_const_lv1_1) and (tmp_reg_1307_pp0_iter0_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op44_read_state4_assign_proc : process(next_state_load_reg_1303, tmp_reg_1307, tmp_3_reg_1311, tmp_5_reg_1315, tmp_6_reg_1319, tmp_7_reg_1331, grp_nbwritereq_fu_258_p3)
    begin
                ap_predicate_op44_read_state4 <= (not((next_state_load_reg_1303 = ap_const_lv2_1)) and not((next_state_load_reg_1303 = ap_const_lv2_2)) and (grp_nbwritereq_fu_258_p3 = ap_const_lv1_1) and (tmp_7_reg_1331 = ap_const_lv1_1) and (tmp_6_reg_1319 = ap_const_lv1_1) and (tmp_5_reg_1315 = ap_const_lv1_1) and (tmp_3_reg_1311 = ap_const_lv1_1) and (tmp_reg_1307 = ap_const_lv1_1));
    end process;


    ap_predicate_op45_read_state4_assign_proc : process(next_state_load_reg_1303, tmp_reg_1307, tmp_3_reg_1311, tmp_5_reg_1315, tmp_6_reg_1319, tmp_7_reg_1331, grp_nbwritereq_fu_258_p3)
    begin
                ap_predicate_op45_read_state4 <= (not((next_state_load_reg_1303 = ap_const_lv2_1)) and not((next_state_load_reg_1303 = ap_const_lv2_2)) and (grp_nbwritereq_fu_258_p3 = ap_const_lv1_1) and (tmp_7_reg_1331 = ap_const_lv1_1) and (tmp_6_reg_1319 = ap_const_lv1_1) and (tmp_5_reg_1315 = ap_const_lv1_1) and (tmp_3_reg_1311 = ap_const_lv1_1) and (tmp_reg_1307 = ap_const_lv1_1));
    end process;


    ap_predicate_op50_write_state4_assign_proc : process(next_state_load_reg_1303, tmp_reg_1307, tmp_3_reg_1311, tmp_5_reg_1315, tmp_6_reg_1319, tmp_7_reg_1331, grp_nbwritereq_fu_258_p3)
    begin
                ap_predicate_op50_write_state4 <= (not((next_state_load_reg_1303 = ap_const_lv2_1)) and not((next_state_load_reg_1303 = ap_const_lv2_2)) and (grp_nbwritereq_fu_258_p3 = ap_const_lv1_1) and (tmp_7_reg_1331 = ap_const_lv1_1) and (tmp_6_reg_1319 = ap_const_lv1_1) and (tmp_5_reg_1315 = ap_const_lv1_1) and (tmp_3_reg_1311 = ap_const_lv1_1) and (tmp_reg_1307 = ap_const_lv1_1));
    end process;


    ap_predicate_op51_read_state4_assign_proc : process(next_state_load_reg_1303, tmp_reg_1307, tmp_3_reg_1311, tmp_5_reg_1315, tmp_6_reg_1319, tmp_7_reg_1331, grp_nbwritereq_fu_258_p3)
    begin
                ap_predicate_op51_read_state4 <= (not((next_state_load_reg_1303 = ap_const_lv2_1)) and not((next_state_load_reg_1303 = ap_const_lv2_2)) and (grp_nbwritereq_fu_258_p3 = ap_const_lv1_1) and (tmp_7_reg_1331 = ap_const_lv1_1) and (tmp_6_reg_1319 = ap_const_lv1_1) and (tmp_5_reg_1315 = ap_const_lv1_1) and (tmp_3_reg_1311 = ap_const_lv1_1) and (tmp_reg_1307 = ap_const_lv1_1));
    end process;


    ap_predicate_op74_write_state5_assign_proc : process(next_state_load_reg_1303_pp0_iter0_reg, tmp_1_reg_1323_pp0_iter0_reg)
    begin
                ap_predicate_op74_write_state5 <= ((tmp_1_reg_1323_pp0_iter0_reg = ap_const_lv1_1) and (next_state_load_reg_1303_pp0_iter0_reg = ap_const_lv2_1));
    end process;


    ap_predicate_op80_write_state5_assign_proc : process(next_state_load_reg_1303_pp0_iter0_reg, tmp_2_reg_1327_pp0_iter0_reg, tmp_4_reg_1335)
    begin
                ap_predicate_op80_write_state5 <= ((next_state_load_reg_1303_pp0_iter0_reg = ap_const_lv2_2) and (tmp_4_reg_1335 = ap_const_lv1_1) and (tmp_2_reg_1327_pp0_iter0_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op84_write_state5_assign_proc : process(next_state_load_reg_1303_pp0_iter0_reg, tmp_2_reg_1327_pp0_iter0_reg, tmp_4_reg_1335)
    begin
                ap_predicate_op84_write_state5 <= ((next_state_load_reg_1303_pp0_iter0_reg = ap_const_lv2_2) and (tmp_4_reg_1335 = ap_const_lv1_1) and (tmp_2_reg_1327_pp0_iter0_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op85_write_state5_assign_proc : process(next_state_load_reg_1303_pp0_iter0_reg, tmp_reg_1307_pp0_iter0_reg, tmp_3_reg_1311_pp0_iter0_reg, tmp_5_reg_1315_pp0_iter0_reg, tmp_6_reg_1319_pp0_iter0_reg, tmp_7_reg_1331_pp0_iter0_reg, tmp_8_reg_1339)
    begin
                ap_predicate_op85_write_state5 <= (not((next_state_load_reg_1303_pp0_iter0_reg = ap_const_lv2_1)) and not((next_state_load_reg_1303_pp0_iter0_reg = ap_const_lv2_2)) and (tmp_8_reg_1339 = ap_const_lv1_1) and (tmp_7_reg_1331_pp0_iter0_reg = ap_const_lv1_1) and (tmp_6_reg_1319_pp0_iter0_reg = ap_const_lv1_1) and (tmp_5_reg_1315_pp0_iter0_reg = ap_const_lv1_1) and (tmp_3_reg_1311_pp0_iter0_reg = ap_const_lv1_1) and (tmp_reg_1307_pp0_iter0_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op86_write_state5_assign_proc : process(next_state_load_reg_1303_pp0_iter0_reg, tmp_reg_1307_pp0_iter0_reg, tmp_3_reg_1311_pp0_iter0_reg, tmp_5_reg_1315_pp0_iter0_reg, tmp_6_reg_1319_pp0_iter0_reg, tmp_7_reg_1331_pp0_iter0_reg, tmp_8_reg_1339)
    begin
                ap_predicate_op86_write_state5 <= (not((next_state_load_reg_1303_pp0_iter0_reg = ap_const_lv2_1)) and not((next_state_load_reg_1303_pp0_iter0_reg = ap_const_lv2_2)) and (tmp_8_reg_1339 = ap_const_lv1_1) and (tmp_7_reg_1331_pp0_iter0_reg = ap_const_lv1_1) and (tmp_6_reg_1319_pp0_iter0_reg = ap_const_lv1_1) and (tmp_5_reg_1315_pp0_iter0_reg = ap_const_lv1_1) and (tmp_3_reg_1311_pp0_iter0_reg = ap_const_lv1_1) and (tmp_reg_1307_pp0_iter0_reg = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_iter0_fsm_state4, ap_block_state4_pp0_stage3_iter0, ap_block_state5_pp0_stage0_iter1, ap_CS_iter1_fsm_state5, ap_block_state6_pp0_stage1_iter1, ap_CS_iter1_fsm_state6, ap_done_reg)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state4_pp0_stage3_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state6) and (ap_const_boolean_1 = ap_block_state6_pp0_stage1_iter1)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state5) and (ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    curr_byte_1_fu_395_p4 <= order_from_book_TDATA_int_regslice(55 downto 52);
    curr_byte_2_fu_433_p4 <= order_from_book_TDATA_int_regslice(51 downto 45);
    empty_16_fu_778_p3 <= 
        ap_const_lv4_0 when (icmp_ln415_reg_1372(0) = '1') else 
        select_ln417_1_fu_765_p3;
    empty_17_fu_801_p3 <= 
        empty_fu_771_p3 when (or_ln417_1_fu_796_p2(0) = '1') else 
        zext_ln411_1_fu_789_p1;
    empty_18_fu_809_p3 <= 
        curr_byte_2_reg_1384 when (and_ln417_reg_1464(0) = '1') else 
        zext_ln406_1_fu_785_p1;
    empty_19_fu_815_p3 <= 
        curr_byte_2_reg_1384 when (and_ln417_1_reg_1469(0) = '1') else 
        ap_const_lv7_0;
    empty_20_fu_824_p3 <= 
        curr_byte_3_reg_1415 when (and_ln417_2_reg_1479(0) = '1') else 
        ap_const_lv7_0;
    empty_21_fu_844_p3 <= 
        empty_17_fu_801_p3 when (or_ln417_4_fu_838_p2(0) = '1') else 
        zext_ln411_2_fu_821_p1;
    empty_22_fu_852_p3 <= 
        curr_byte_3_reg_1415 when (and_ln417_3_reg_1499(0) = '1') else 
        empty_18_fu_809_p3;
    empty_23_fu_858_p3 <= 
        curr_byte_3_reg_1415 when (and_ln417_4_reg_1504(0) = '1') else 
        empty_19_fu_815_p3;
    empty_24_fu_877_p3 <= 
        encoded_message_6_reg_1424 when (and_ln417_5_fu_872_p2(0) = '1') else 
        empty_20_fu_824_p3;
    empty_25_fu_894_p3 <= 
        encoded_message_6_reg_1424 when (and_ln417_6_fu_889_p2(0) = '1') else 
        ap_const_lv7_0;
    empty_26_fu_940_p3 <= 
        empty_21_fu_844_p3 when (or_ln417_8_fu_934_p2(0) = '1') else 
        zext_ln391_fu_864_p1;
    empty_27_fu_953_p3 <= 
        encoded_message_6_reg_1424 when (and_ln417_7_fu_948_p2(0) = '1') else 
        empty_22_fu_852_p3;
    empty_28_fu_965_p3 <= 
        encoded_message_6_reg_1424 when (and_ln417_8_fu_960_p2(0) = '1') else 
        empty_23_fu_858_p3;
    empty_29_fu_1201_p3 <= 
        encoded_message_4_fu_1047_p3 when (icmp_ln425_fu_1195_p2(0) = '1') else 
        ap_const_lv8_0;
    empty_30_fu_1257_p3 <= 
        empty_26_fu_940_p3 when (or_ln425_3_fu_1251_p2(0) = '1') else 
        encoded_message_fu_1037_p3;
    empty_fu_771_p3 <= 
        select_ln400_1_fu_748_p3 when (icmp_ln415_reg_1372(0) = '1') else 
        select_ln417_fu_758_p3;
    encoded_message_4_fu_1047_p3 <= (ap_const_lv1_1 & zext_ln427_fu_1044_p1);
    encoded_message_fu_1037_p3 <= (ap_const_lv1_1 & tmp_17_reg_1434);
    first_packet_data_fu_1265_p6 <= ((((tmp_11_fu_1055_p13 & tmp_12_fu_1083_p13) & empty_30_fu_1257_p3) & select_ln400_fu_741_p3) & ap_const_lv32_818081FC);
    grp_nbwritereq_fu_242_p3 <= (0=>lbTxDataOut_TREADY_int_regslice, others=>'-');
    grp_nbwritereq_fu_250_p3 <= (0=>lbTxLengthOut_TREADY_int_regslice, others=>'-');
    grp_nbwritereq_fu_258_p3 <= (0=>tagsOut_TREADY_int_regslice, others=>'-');
    icmp_ln415_1_fu_443_p2 <= "0" when (curr_byte_2_fu_433_p4 = ap_const_lv7_0) else "1";
    icmp_ln415_2_fu_631_p2 <= "0" when (curr_byte_3_reg_1415 = ap_const_lv7_0) else "1";
    icmp_ln415_3_fu_723_p2 <= "0" when (encoded_message_6_reg_1424 = ap_const_lv7_0) else "1";
    icmp_ln415_fu_405_p2 <= "1" when (curr_byte_1_fu_395_p4 = ap_const_lv4_0) else "0";
    icmp_ln417_1_fu_461_p2 <= "1" when (message_offset_1_fu_419_p3 = ap_const_lv3_6) else "0";
    icmp_ln417_2_fu_641_p2 <= "1" when (message_offset_2_fu_607_p11 = ap_const_lv4_8) else "0";
    icmp_ln417_3_fu_653_p2 <= "1" when (message_offset_2_fu_607_p11 = ap_const_lv4_7) else "0";
    icmp_ln417_4_fu_659_p2 <= "1" when (message_offset_2_fu_607_p11 = ap_const_lv4_6) else "0";
    icmp_ln417_5_fu_867_p2 <= "1" when (message_offset_3_reg_1509 = ap_const_lv4_8) else "0";
    icmp_ln417_6_fu_884_p2 <= "1" when (message_offset_3_reg_1509 = ap_const_lv4_9) else "0";
    icmp_ln417_7_fu_901_p2 <= "1" when (message_offset_3_reg_1509 = ap_const_lv4_7) else "0";
    icmp_ln417_8_fu_906_p2 <= "1" when (message_offset_3_reg_1509 = ap_const_lv4_6) else "0";
    icmp_ln417_fu_455_p2 <= "1" when (message_offset_1_fu_419_p3 = ap_const_lv3_7) else "0";
    icmp_ln425_1_fu_1209_p2 <= "1" when (message_offset_4_fu_986_p15 = ap_const_lv4_7) else "0";
    icmp_ln425_2_fu_1215_p2 <= "1" when (message_offset_4_fu_986_p15 = ap_const_lv4_8) else "0";
    icmp_ln425_3_fu_1221_p2 <= "1" when (message_offset_4_fu_986_p15 = ap_const_lv4_9) else "0";
    icmp_ln425_4_fu_1227_p2 <= "1" when (message_offset_4_fu_986_p15 = ap_const_lv4_6) else "0";
    icmp_ln425_fu_1195_p2 <= "1" when (message_offset_4_fu_986_p15 = ap_const_lv4_A) else "0";

    lbTxDataOut_TDATA_blk_n_assign_proc : process(ap_predicate_op74_write_state5, ap_predicate_op80_write_state5, ap_CS_iter1_fsm_state5, ap_predicate_op107_write_state6, ap_predicate_op110_write_state6, ap_CS_iter1_fsm_state6, lbTxDataOut_TREADY_int_regslice)
    begin
        if ((((ap_const_logic_1 = ap_CS_iter1_fsm_state6) and (ap_predicate_op110_write_state6 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state6) and (ap_predicate_op107_write_state6 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state5) and (ap_predicate_op80_write_state5 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state5) and (ap_predicate_op74_write_state5 = ap_const_boolean_1)))) then 
            lbTxDataOut_TDATA_blk_n <= lbTxDataOut_TREADY_int_regslice;
        else 
            lbTxDataOut_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    lbTxDataOut_TDATA_int_regslice_assign_proc : process(ap_predicate_op74_write_state5, ap_predicate_op80_write_state5, zext_ln458_fu_529_p1, zext_ln479_1_fu_554_p1, ap_condition_355)
    begin
        if ((ap_const_boolean_1 = ap_condition_355)) then
            if ((ap_predicate_op80_write_state5 = ap_const_boolean_1)) then 
                lbTxDataOut_TDATA_int_regslice <= zext_ln479_1_fu_554_p1;
            elsif ((ap_predicate_op74_write_state5 = ap_const_boolean_1)) then 
                lbTxDataOut_TDATA_int_regslice <= zext_ln458_fu_529_p1;
            else 
                lbTxDataOut_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            lbTxDataOut_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    lbTxDataOut_TVALID <= regslice_both_lbTxDataOut_U_vld_out;

    lbTxDataOut_TVALID_int_regslice_assign_proc : process(ap_predicate_op74_write_state5, ap_predicate_op80_write_state5, ap_block_state5_pp0_stage0_iter1, ap_CS_iter1_fsm_state5, ap_done_reg)
    begin
        if (((not(((ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter1) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state5) and (ap_predicate_op80_write_state5 = ap_const_boolean_1)) or (not(((ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter1) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state5) and (ap_predicate_op74_write_state5 = ap_const_boolean_1)))) then 
            lbTxDataOut_TVALID_int_regslice <= ap_const_logic_1;
        else 
            lbTxDataOut_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    lbTxLengthOut_TDATA_blk_n_assign_proc : process(ap_predicate_op84_write_state5, ap_CS_iter1_fsm_state5, ap_predicate_op111_write_state6, ap_CS_iter1_fsm_state6, lbTxLengthOut_TREADY_int_regslice)
    begin
        if ((((ap_const_logic_1 = ap_CS_iter1_fsm_state6) and (ap_predicate_op111_write_state6 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state5) and (ap_predicate_op84_write_state5 = ap_const_boolean_1)))) then 
            lbTxLengthOut_TDATA_blk_n <= lbTxLengthOut_TREADY_int_regslice;
        else 
            lbTxLengthOut_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lbTxLengthOut_TDATA_int_regslice <= std_logic_vector(unsigned(lbPacketLength) + unsigned(ap_const_lv16_8));
    lbTxLengthOut_TVALID <= regslice_both_lbTxLengthOut_U_vld_out;

    lbTxLengthOut_TVALID_int_regslice_assign_proc : process(ap_predicate_op84_write_state5, ap_block_state5_pp0_stage0_iter1, ap_CS_iter1_fsm_state5, ap_done_reg)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter1) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state5) and (ap_predicate_op84_write_state5 = ap_const_boolean_1))) then 
            lbTxLengthOut_TVALID_int_regslice <= ap_const_logic_1;
        else 
            lbTxLengthOut_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    lbTxMetadataOut_TDATA_blk_n_assign_proc : process(ap_CS_iter0_fsm_state4, ap_predicate_op50_write_state4, ap_predicate_op86_write_state5, ap_CS_iter1_fsm_state5, lbTxMetadataOut_TREADY_int_regslice)
    begin
        if ((((ap_predicate_op50_write_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state5) and (ap_predicate_op86_write_state5 = ap_const_boolean_1)))) then 
            lbTxMetadataOut_TDATA_blk_n <= lbTxMetadataOut_TREADY_int_regslice;
        else 
            lbTxMetadataOut_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lbTxMetadataOut_TDATA_int_regslice <= ((tmp_s_fu_338_p4 & tmp_9_fu_348_p4) & trunc_ln377_fu_334_p1);
    lbTxMetadataOut_TVALID <= regslice_both_lbTxMetadataOut_U_vld_out;

    lbTxMetadataOut_TVALID_int_regslice_assign_proc : process(ap_CS_iter0_fsm_state4, ap_predicate_op50_write_state4, ap_block_state4_pp0_stage3_iter0, ap_block_state5_pp0_stage0_iter1, ap_CS_iter1_fsm_state5, ap_block_state6_pp0_stage1_iter1, ap_CS_iter1_fsm_state6, ap_done_reg)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state4_pp0_stage3_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state6) and (ap_const_boolean_1 = ap_block_state6_pp0_stage1_iter1)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state5) and (ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter1)))) and (ap_predicate_op50_write_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4))) then 
            lbTxMetadataOut_TVALID_int_regslice <= ap_const_logic_1;
        else 
            lbTxMetadataOut_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    message_offset_1_fu_419_p3 <= 
        message_offset_fu_387_p3 when (icmp_ln415_fu_405_p2(0) = '1') else 
        select_ln417_2_fu_411_p3;
    message_offset_2_fu_607_p10 <= ((and_ln415_fu_584_p2 & and_ln417_1_fu_593_p2) & and_ln417_fu_589_p2);
    message_offset_2_fu_607_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(message_offset_1_reg_1379),4));
    message_offset_2_fu_607_p9 <= "XXXX";
    message_offset_3_fu_695_p11 <= "XXXX";
    message_offset_3_fu_695_p12 <= (((xor_ln415_1_fu_665_p2 & and_ln417_2_fu_647_p2) & and_ln417_4_fu_677_p2) & and_ln417_3_fu_671_p2);
    message_offset_4_fu_986_p13 <= "XXXX";
    message_offset_4_fu_986_p14 <= ((((xor_ln415_2_fu_911_p2 & and_ln417_6_fu_889_p2) & and_ln417_5_fu_872_p2) & and_ln417_8_fu_960_p2) & and_ln417_7_fu_948_p2);
    message_offset_fu_387_p3 <= 
        ap_const_lv3_6 when (tmp_10_fu_369_p3(0) = '1') else 
        ap_const_lv3_5;

    metadata_from_book_TDATA_blk_n_assign_proc : process(ap_CS_iter0_fsm_state4, ap_predicate_op45_read_state4, metadata_from_book_TVALID_int_regslice)
    begin
        if (((ap_predicate_op45_read_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4))) then 
            metadata_from_book_TDATA_blk_n <= metadata_from_book_TVALID_int_regslice;
        else 
            metadata_from_book_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    metadata_from_book_TREADY <= regslice_both_metadata_from_book_U_ack_in;

    metadata_from_book_TREADY_int_regslice_assign_proc : process(ap_CS_iter0_fsm_state4, ap_predicate_op45_read_state4, ap_block_state4_pp0_stage3_iter0, ap_block_state5_pp0_stage0_iter1, ap_CS_iter1_fsm_state5, ap_block_state6_pp0_stage1_iter1, ap_CS_iter1_fsm_state6, ap_done_reg)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state4_pp0_stage3_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state6) and (ap_const_boolean_1 = ap_block_state6_pp0_stage1_iter1)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state5) and (ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter1)))) and (ap_predicate_op45_read_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4))) then 
            metadata_from_book_TREADY_int_regslice <= ap_const_logic_1;
        else 
            metadata_from_book_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    or_ln1_fu_542_p3 <= (ap_const_lv1_1 & zext_ln479_fu_538_p1);
    or_ln2_fu_734_p3 <= (ap_const_lv1_1 & tmp_16_reg_1361);
    or_ln415_fu_728_p2 <= (triggered_2_fu_636_p2 or icmp_ln415_3_fu_723_p2);
    or_ln417_1_fu_796_p2 <= (or_ln417_fu_792_p2 or icmp_ln417_reg_1403);
    or_ln417_2_fu_830_p2 <= (xor_ln415_1_reg_1494 or icmp_ln417_2_reg_1474);
    or_ln417_3_fu_834_p2 <= (icmp_ln417_4_reg_1489 or icmp_ln417_3_reg_1484);
    or_ln417_4_fu_838_p2 <= (or_ln417_3_fu_834_p2 or or_ln417_2_fu_830_p2);
    or_ln417_5_fu_916_p2 <= (xor_ln415_2_fu_911_p2 or icmp_ln417_6_fu_884_p2);
    or_ln417_6_fu_922_p2 <= (icmp_ln417_8_fu_906_p2 or icmp_ln417_7_fu_901_p2);
    or_ln417_7_fu_928_p2 <= (or_ln417_6_fu_922_p2 or icmp_ln417_5_fu_867_p2);
    or_ln417_8_fu_934_p2 <= (or_ln417_7_fu_928_p2 or or_ln417_5_fu_916_p2);
    or_ln417_fu_792_p2 <= (icmp_ln417_1_reg_1409 or and_ln415_reg_1459);
    or_ln425_1_fu_1239_p2 <= (icmp_ln425_fu_1195_p2 or icmp_ln425_4_fu_1227_p2);
    or_ln425_2_fu_1245_p2 <= (or_ln425_1_fu_1239_p2 or icmp_ln425_3_fu_1221_p2);
    or_ln425_3_fu_1251_p2 <= (or_ln425_fu_1233_p2 or or_ln425_2_fu_1245_p2);
    or_ln425_fu_1233_p2 <= (icmp_ln425_2_fu_1215_p2 or icmp_ln425_1_fu_1209_p2);
    or_ln_fu_517_p3 <= (ap_const_lv1_1 & first_packet_data);

    order_from_book_TDATA_blk_n_assign_proc : process(ap_CS_iter0_fsm_state4, ap_predicate_op51_read_state4, order_from_book_TVALID_int_regslice)
    begin
        if (((ap_predicate_op51_read_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4))) then 
            order_from_book_TDATA_blk_n <= order_from_book_TVALID_int_regslice;
        else 
            order_from_book_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    order_from_book_TREADY <= regslice_both_order_from_book_U_ack_in;

    order_from_book_TREADY_int_regslice_assign_proc : process(ap_CS_iter0_fsm_state4, ap_predicate_op51_read_state4, ap_block_state4_pp0_stage3_iter0, ap_block_state5_pp0_stage0_iter1, ap_CS_iter1_fsm_state5, ap_block_state6_pp0_stage1_iter1, ap_CS_iter1_fsm_state6, ap_done_reg)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state4_pp0_stage3_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state6) and (ap_const_boolean_1 = ap_block_state6_pp0_stage1_iter1)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state5) and (ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter1)))) and (ap_predicate_op51_read_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4))) then 
            order_from_book_TREADY_int_regslice <= ap_const_logic_1;
        else 
            order_from_book_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    second_packet_data_fu_1279_p5 <= (((empty_29_fu_1201_p3 & tmp_13_fu_1111_p13) & tmp_14_fu_1139_p13) & tmp_15_fu_1167_p13);
    select_ln400_1_fu_748_p3 <= 
        or_ln2_fu_734_p3 when (tmp_10_reg_1353(0) = '1') else 
        ap_const_lv8_0;
    select_ln400_fu_741_p3 <= 
        ap_const_lv8_1 when (tmp_10_reg_1353(0) = '1') else 
        or_ln2_fu_734_p3;
    select_ln417_1_fu_765_p3 <= 
        curr_byte_1_reg_1366 when (tmp_10_reg_1353(0) = '1') else 
        ap_const_lv4_0;
    select_ln417_2_fu_411_p3 <= 
        ap_const_lv3_7 when (tmp_10_fu_369_p3(0) = '1') else 
        ap_const_lv3_6;
    select_ln417_fu_758_p3 <= 
        or_ln2_fu_734_p3 when (tmp_10_reg_1353(0) = '1') else 
        zext_ln411_fu_755_p1;
        sext_ln458_fu_525_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(or_ln_fu_517_p3),72));

        sext_ln479_fu_550_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(or_ln1_fu_542_p3),73));


    tagsOut_TDATA_blk_n_assign_proc : process(ap_predicate_op85_write_state5, ap_CS_iter1_fsm_state5, ap_predicate_op114_write_state6, ap_CS_iter1_fsm_state6, tagsOut_TREADY_int_regslice)
    begin
        if ((((ap_const_logic_1 = ap_CS_iter1_fsm_state6) and (ap_predicate_op114_write_state6 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state5) and (ap_predicate_op85_write_state5 = ap_const_boolean_1)))) then 
            tagsOut_TDATA_blk_n <= tagsOut_TREADY_int_regslice;
        else 
            tagsOut_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    tagsOut_TVALID <= regslice_both_tagsOut_U_vld_out;

    tagsOut_TVALID_int_regslice_assign_proc : process(ap_predicate_op85_write_state5, ap_block_state5_pp0_stage0_iter1, ap_CS_iter1_fsm_state5, ap_done_reg)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter1) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state5) and (ap_predicate_op85_write_state5 = ap_const_boolean_1))) then 
            tagsOut_TVALID_int_regslice <= ap_const_logic_1;
        else 
            tagsOut_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    time_from_book_TDATA_blk_n_assign_proc : process(ap_CS_iter0_fsm_state4, ap_predicate_op44_read_state4, time_from_book_TVALID_int_regslice)
    begin
        if (((ap_predicate_op44_read_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4))) then 
            time_from_book_TDATA_blk_n <= time_from_book_TVALID_int_regslice;
        else 
            time_from_book_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    time_from_book_TREADY <= regslice_both_time_from_book_U_ack_in;

    time_from_book_TREADY_int_regslice_assign_proc : process(ap_CS_iter0_fsm_state4, ap_predicate_op44_read_state4, ap_block_state4_pp0_stage3_iter0, ap_block_state5_pp0_stage0_iter1, ap_CS_iter1_fsm_state5, ap_block_state6_pp0_stage1_iter1, ap_CS_iter1_fsm_state6, ap_done_reg)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state4_pp0_stage3_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state6) and (ap_const_boolean_1 = ap_block_state6_pp0_stage1_iter1)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state5) and (ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter1)))) and (ap_predicate_op44_read_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4))) then 
            time_from_book_TREADY_int_regslice <= ap_const_logic_1;
        else 
            time_from_book_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_369_p3 <= order_from_book_TDATA_int_regslice(23 downto 23);
    tmp_3_nbreadreq_fu_218_p3 <= (0=>(time_from_book_TVALID_int_regslice), others=>'-');
    tmp_5_nbreadreq_fu_226_p3 <= (0=>(order_from_book_TVALID_int_regslice), others=>'-');
    tmp_9_fu_348_p4 <= metadata_from_book_TDATA_int_regslice(79 downto 32);
    tmp_nbreadreq_fu_210_p3 <= (0=>(metadata_from_book_TVALID_int_regslice), others=>'-');
    tmp_s_fu_338_p4 <= metadata_from_book_TDATA_int_regslice(127 downto 96);
    triggered_1_fu_449_p2 <= (triggered_fu_427_p2 or icmp_ln415_1_fu_443_p2);
    triggered_2_fu_636_p2 <= (triggered_1_reg_1396 or icmp_ln415_2_fu_631_p2);
    triggered_fu_427_p2 <= (icmp_ln415_fu_405_p2 xor ap_const_lv1_1);
    trunc_ln377_fu_334_p1 <= metadata_from_book_TDATA_int_regslice(16 - 1 downto 0);
    xor_ln415_1_fu_665_p2 <= (triggered_2_fu_636_p2 xor ap_const_lv1_1);
    xor_ln415_2_fu_911_p2 <= (or_ln415_reg_1518 xor ap_const_lv1_1);
    xor_ln415_fu_579_p2 <= (icmp_ln415_1_reg_1391 xor ap_const_lv1_1);
    zext_ln391_fu_864_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(encoded_message_6_reg_1424),8));
    zext_ln399_1_fu_1021_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_28_fu_965_p3),8));
    zext_ln399_2_fu_1025_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_27_fu_953_p3),8));
    zext_ln399_3_fu_1029_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_25_fu_894_p3),8));
    zext_ln399_4_fu_1033_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_24_fu_877_p3),8));
    zext_ln399_fu_1017_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(message_offset_4_fu_986_p15),32));
    zext_ln406_1_fu_785_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_16_fu_778_p3),7));
    zext_ln411_1_fu_789_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(curr_byte_2_reg_1384),8));
    zext_ln411_2_fu_821_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(curr_byte_3_reg_1415),8));
    zext_ln411_fu_755_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(curr_byte_1_reg_1366),8));
    zext_ln427_fu_1044_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_18_reg_1439),7));
    zext_ln458_fu_529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln458_fu_525_p1),128));
    zext_ln479_1_fu_554_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln479_fu_550_p1),128));
    zext_ln479_fu_538_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(second_packet_data),64));
end behav;
